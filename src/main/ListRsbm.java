/*
 * ListRsbm.java
 *
 * Created on May 27, 2005, 8:18 PM
 */

package main;

import java.sql.*;
import javax.swing.JLabel;
import javax.swing.JTextArea;
import javax.swing.JTextField;
/**
 *
 * @author  root
 */
public class ListRsbm extends javax.swing.JFrame {
    public static Connection con;
    private ResultSet rs;
    private String sQuery;
    private Object[] oResult;
    private javax.swing.table.DefaultTableModel myModel;
    private javax.swing.JTextField txtCari;
    private javax.swing.JLabel[] lblDes;
    private Object[] compDes;
    private javax.swing.JTextField resultString;
    private int iRowCount = 0;
    //private javax.swing.JTextField txtCari;
    private int iPosRow = 0;
    private String sResult="",deskripsi="";
    /** Creates new form ListRsbm */
    public ListRsbm() {
        initComponents();
        getRootPane().setWindowDecorationStyle(NORMAL);
   }


    public ListRsbm(String newQry)  throws SQLException {
        initComponents();
        setSQuery(newQry);
        tblList.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        
    }
    
    public void setRs(ResultSet newRS)  throws SQLException {
        rs = newRS;
        setMyModel(rs);
    }
    
    
    public ResultSet getRs() {
        return rs;
    }
    
    public void setSQuery(String newQry) throws SQLException{
        sQuery = newQry;        
        Statement st = con.createStatement();
        rs = st.executeQuery(sQuery);
        setMyModel(rs);
        rs.close();
        st.close();
    }
    
    public String getSQuery(){
        return sQuery;
    }
    
    public void setLblDes(javax.swing.JComponent[] newComp){
	compDes = newComp;
    }
   
    public void setCompDes(Object[] newComp){
	compDes = newComp;
    }
    
    public void setTxtCari(javax.swing.JTextField newTxt){
        txtCari = newTxt;
    }
    
    public void setResultDesc(javax.swing.JTextField newtext){
        resultString=newtext;
    }
    
    public String getDesc(){
        return deskripsi;
    }
        
    public int getIRowCount(){
        return iRowCount;
    }
    
    public String getResultDesk(){
        return sResult;
    }
    
    public void setMyModel(ResultSet newRS)  throws SQLException {
        myModel = new javax.swing.table.DefaultTableModel();
        tblList.setModel(myModel);
            
            for(int i=1;i <= rs.getMetaData().getColumnCount();i++) {
                myModel.addColumn(rs.getMetaData().getColumnName(i));
            }
            iRowCount = 0;
            while (newRS.next()) {
                Object arObj[] = new Object[newRS.getMetaData().getColumnCount()];
                for(int i=1;i <= newRS.getMetaData().getColumnCount();i++) {
                    if(newRS.getObject(i) != null){
                        arObj[i-1]=newRS.getObject(i);
                    } else {                        
                        arObj[i-1]=new Object();
                    }
                }
                myModel.addRow(arObj);
                iRowCount++;
            }            
            if (tblList.getRowCount()>0) {
                tblList.setRowSelectionInterval(0,0) ;
            } else{
                this.setVisible(false);
            }
            newRS.close();    
    }
    
    public Object[] getOResult() {
        Object[] oSelected =new Object[tblList.getColumnCount()];
        
        if (tblList.getRowCount()>=0) {        
            //if (iPosRow == 0) {iPosRow =tblList.getSelectedRow();}
            iPosRow =tblList.getSelectedRow();
            for(int i=1;i <= tblList.getColumnCount();i++) {
                oSelected[i-1] = tblList.getValueAt(iPosRow, i-1);
            }
        }
        oResult = oSelected;
        return oResult;
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblList = new javax.swing.JTable();

        setAlwaysOnTop(true);
        setResizable(false);
        setUndecorated(true);
        addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                formFocusGained(evt);
            }
        });

        jScrollPane1.setBackground(new java.awt.Color(255, 255, 204));
        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
        jScrollPane1.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
        jScrollPane1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jScrollPane1MouseClicked(evt);
            }
        });

        tblList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblList.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        tblList.setSelectionBackground(new java.awt.Color(153, 255, 255));
        tblList.setSelectionForeground(new java.awt.Color(0, 0, 204));
        tblList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblListMouseClicked(evt);
            }
        });
        tblList.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                tblListFocusLost(evt);
            }
        });
        tblList.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tblListKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(tblList);

        getContentPane().add(jScrollPane1, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void tblListFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tblListFocusLost

            /*iPosRow =tblList.getSelectedRow();    
            txtCari.setText(tblList.getValueAt(iPosRow, 0).toString());
            deskripsi=tblList.getValueAt(iPosRow, 1).toString();            
            txtCari.requestFocus();
            for (int i=0;i<lblDes.length;i++){
                lblDes[i].setText(tblList.getValueAt(iPosRow, i+1).toString());                
            }
        dispose();
             */
    }//GEN-LAST:event_tblListFocusLost

    private void jScrollPane1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jScrollPane1MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jScrollPane1MouseClicked

    private void tblListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblListMouseClicked
        udfSelected();
        //if (evt.getClickCount()==2){
//            iPosRow =tblList.getSelectedRow();
//            this.setVisible(false);
//            txtCari.setText(tblList.getValueAt(iPosRow, 0).toString());
//            deskripsi=tblList.getValueAt(iPosRow, 1).toString();
//            //sResult=tblList.getValueAt(iPosRow, 1).toString().trim();
//            //resultString.setText(tblList.getValueAt(iPosRow, 1).toString());
//            //if (resultString.getText().equalsIgnoreCase("")){
//            //    resultString.setText(tblList.getValueAt(iPosRow, 1).toString());
//            //}
//            txtCari.requestFocus();
//            for (int i=0;i<lblDes.length;i++){
//                lblDes[i].setText(tblList.getValueAt(iPosRow, i+1).toString());
//            }

	    //for (int i=0;i<compDes.length;i++){
            //    compDes[i]..setText(tblList.getValueAt(iPosRow, i+1).toString());
           // }
	    
	    
        //    System.out.println(evt.getClickCount());
        //}
        //System.out.println(evt.getModifiersExText(1));
        //System.out.println(evt.getModifiersExText(2));
        //System.out.println(evt.getModifiersExText(3));
    }//GEN-LAST:event_tblListMouseClicked

    private void tblListKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tblListKeyPressed
        if (evt.getKeyCode() == java.awt.event.KeyEvent.VK_ENTER) {                       
            udfSelected();
            
//            iPosRow =tblList.getSelectedRow();
//            this.setVisible(false);
//            txtCari.setText(tblList.getValueAt(tblList.getSelectedRow(), 0).toString());
//            sResult=tblList.getValueAt(tblList.getSelectedRow(), 1).toString().trim();
//            deskripsi=tblList.getValueAt(tblList.getSelectedRow(), 1).toString().trim();
//            //resultString.setText(tblList.getValueAt(iPosRow, 1).toString());
//            //if (resultString.getText().equalsIgnoreCase("")){
//            //    resultString.setText(tblList.getValueAt(tblList.getSelectedRow(), 1).toString());
//            //}
//            txtCari.requestFocus();
//            for (int i=0;i<lblDes.length;i++){
//                lblDes[i].setText(tblList.getValueAt(iPosRow, i+1).toString());
//            }

            //getOResult();
        }          
        
    }//GEN-LAST:event_tblListKeyPressed

    private void formFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_formFocusGained
        tblList.requestFocus();
    }//GEN-LAST:event_formFocusGained
    
    public void setColWidth(int ColIndex, int ColWidth) {                        
        tblList.getColumnModel().getColumn(ColIndex).setMaxWidth(ColWidth);
        tblList.getColumnModel().getColumn(ColIndex).setMinWidth(ColWidth);
        tblList.getColumnModel().getColumn(ColIndex).setPreferredWidth(ColWidth);
    }

    public String getKeyword(){
        return txtCari.getText();
    }
    public void udfSelected(){
        iPosRow =tblList.getSelectedRow();
        this.setVisible(false);
        txtCari.setText(tblList.getValueAt(tblList.getSelectedRow(), 0).toString());
//        sResult=tblList.getValueAt(tblList.getSelectedRow(), 1).toString().trim();
//        deskripsi=tblList.getValueAt(tblList.getSelectedRow(), 1).toString().trim();

        txtCari.requestFocus();
        if(compDes==null) return;
        for (int i=0;i<compDes.length;i++){
            if(compDes[i] instanceof JLabel)
                ((JLabel)compDes[i]).setText(tblList.getValueAt(iPosRow, i+1).toString());
            else if(compDes[i] instanceof JTextArea)
                ((JTextArea)compDes[i]).setText(tblList.getValueAt(iPosRow, i+1).toString());
            else if(compDes[i] instanceof JTextField)
                ((JTextField)compDes[i]).setText(tblList.getValueAt(iPosRow, i+1).toString());
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblList;
    // End of variables declaration//GEN-END:variables

    
    
}
