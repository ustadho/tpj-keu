/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * DlgSatuanKirim.java
 *
 * Created on Apr 18, 2009, 7:03:40 AM
 */

package tpjkeuangan;

import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ustadho
 */
public class DlgSatuanKirim1 extends javax.swing.JDialog {
    private Connection conn;
    private DefaultTableModel myModel;

    /** Creates new form DlgSatuanKirim */
    public DlgSatuanKirim1(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    public void setConn(Connection con){
        this.conn=con;
    }

    private void udfLoadGrid(int rowPosition){
        try {
            ResultSet rs = conn.createStatement().executeQuery("select coalesce(satuan,''), coalesce(ket_satuan,''), " +
                    "coalesce(formats,'') as formats, id from nota_satuan order by id");

            myModel=(DefaultTableModel)jXTable1.getModel();
            myModel.setNumRows(0);
            jXTable1.setModel(myModel);

            while(rs.next()){
                myModel.addRow(new Object[]{
                    rs.getString(1),
                    rs.getString(2),
                    rs.getString(3),
                    rs.getInt(4)
                });
            }

            if(myModel.getRowCount()>0) jXTable1.setRowSelectionInterval(rowPosition, rowPosition);

        } catch (SQLException ex) {
            Logger.getLogger(DlgSatuanKirim1.class.getName()).log(Level.SEVERE, null, ex);
        }

    }
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jXTitledPanel1 = new org.jdesktop.swingx.JXTitledPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jXTable1 = new org.jdesktop.swingx.JXTable();
        txtKeterangan = new javax.swing.JTextField();
        txtUnit = new javax.swing.JTextField();
        cmbFormat = new javax.swing.JComboBox();
        btnSave = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Histori Satuan Nota");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jXTitledPanel1.setTitle(" History Satuan");
        jXTitledPanel1.setName("jXTitledPanel1"); // NOI18N
        jXTitledPanel1.getContentContainer().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        jXTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Satuan", "Keterangan", "Formats", "ID"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jXTable1.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jXTable1.setName("jXTable1"); // NOI18N
        jScrollPane1.setViewportView(jXTable1);

        jXTitledPanel1.getContentContainer().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 23, 460, 380));

        txtKeterangan.setName("txtKeterangan"); // NOI18N
        jXTitledPanel1.getContentContainer().add(txtKeterangan, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 0, 260, -1));

        txtUnit.setName("txtUnit"); // NOI18N
        jXTitledPanel1.getContentContainer().add(txtUnit, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 100, -1));

        cmbFormat.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "#,##0", "#,###.000" }));
        cmbFormat.setName("cmbFormat"); // NOI18N
        jXTitledPanel1.getContentContainer().add(cmbFormat, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 0, 100, -1));

        btnSave.setText("jButton1");
        btnSave.setName("btnSave"); // NOI18N
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });
        jXTitledPanel1.getContentContainer().add(btnSave, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 0, 73, -1));

        jButton1.setText("Add");
        jButton1.setName("jButton1"); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jXTitledPanel1.getContentContainer().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 22, 73, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jXTitledPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jXTitledPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-565)/2, (screenSize.height-484)/2, 565, 484);
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        SelectionListener listener=new SelectionListener(jXTable1);
        jXTable1.getSelectionModel().addListSelectionListener(listener);
        jXTable1.getColumnModel().getSelectionModel().addListSelectionListener(listener);

        jXTable1.getColumnModel().getColumn(0).setPreferredWidth(txtUnit.getWidth());
        jXTable1.getColumnModel().getColumn(1).setPreferredWidth(txtKeterangan.getWidth());
        jXTable1.getColumnModel().getColumn(2).setPreferredWidth(cmbFormat.getWidth());

        udfLoadGrid(0);
    }//GEN-LAST:event_formWindowOpened

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        txtUnit.setText("");
        txtKeterangan.setText("");
        cmbFormat.setSelectedIndex(0);
        btnSave.setText("Save");
    }//GEN-LAST:event_jButton1ActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        String sUpd="";
        if(btnSave.getText().equalsIgnoreCase("Save"))
            sUpd="Insert into nota_satuan(satuan, ket_satuan, formats) " +
                    "values('"+txtUnit.getText()+"', '"+txtKeterangan.getText()+"', " +
                    "'"+cmbFormat.getSelectedItem().toString()+"')";
        else
            sUpd="Update nota_satuan set satuan='"+txtUnit.getText()+"', " +
                    "ket_satuan='"+txtKeterangan.getText()+"', " +
                    "formats='"+cmbFormat.getSelectedItem().toString()+"' " +
                    "where id="+Integer.parseInt(jXTable1.getValueAt(jXTable1.getSelectedRow(), 3).toString())+ " ";

        System.out.println(sUpd);
        int i=0;
        try{
            i=conn.createStatement().executeUpdate(sUpd);

            if(i>0) JOptionPane.showMessageDialog(this, "OK", btnSave.getText()+" Successful", JOptionPane.INFORMATION_MESSAGE);

            if(btnSave.getText().equalsIgnoreCase("save")){
                udfLoadGrid(myModel.getRowCount());
            }else{
//                myModel.setValueAt(txtUnit.getText(), jXTable1.getSelectedRow(), 0);
//                myModel.setValueAt(txtKeterangan.getText(), jXTable1.getSelectedRow(), 1);
//                myModel.setValueAt(cmbFormat.getSelectedItem().toString(), jXTable1.getSelectedRow(), 2);
                udfLoadGrid(jXTable1.getSelectedRow());
            }
        }catch(SQLException se){
            JOptionPane.showMessageDialog(this, se.getMessage());
        }
    }//GEN-LAST:event_btnSaveActionPerformed

    public class SelectionListener implements ListSelectionListener {
         JTable table;
         int rowPos;
         int colPos;

        // It is necessary to keep the table since it is not possible
        // to determine the table from the event's source
        SelectionListener(JTable table) {
            this.table = table;
        }
        public void valueChanged(ListSelectionEvent e) {
            if(table.getSelectedRow()>=0){
                txtUnit.setText(table.getValueAt(table.getSelectedRow(), 0).toString());
                txtKeterangan.setText(table.getValueAt(table.getSelectedRow(), 1).toString());
                cmbFormat.setSelectedItem(table.getValueAt(table.getSelectedRow(), 2).toString());
                btnSave.setText("Update");
            }
        }
    }

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                DlgSatuanKirim1 dialog = new DlgSatuanKirim1(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSave;
    private javax.swing.JComboBox cmbFormat;
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private org.jdesktop.swingx.JXTable jXTable1;
    private org.jdesktop.swingx.JXTitledPanel jXTitledPanel1;
    private javax.swing.JTextField txtKeterangan;
    private javax.swing.JTextField txtUnit;
    // End of variables declaration//GEN-END:variables

}
