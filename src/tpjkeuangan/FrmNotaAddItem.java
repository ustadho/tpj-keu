/*
 * FrmNotaAddItem.java
 *
 * Created on October 17, 2008, 6:06 AM
 */
package tpjkeuangan;

import java.awt.Component;
import java.awt.Container;
import java.awt.FocusTraversalPolicy;
import java.awt.KeyboardFocusManager;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.SQLException;
import java.text.DecimalFormat;
import java.text.NumberFormat;
import java.text.ParseException;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author  Administrator
 */
public class FrmNotaAddItem extends javax.swing.JDialog {

    private ListRsbm lst;
    private ListRsbmNota lst2;
    MyKeyListener kListener = new MyKeyListener();
    private boolean isToko = true;
    private String sCust = "";
    private Connection conn;
    private DefaultTableModel srcModel;
    private boolean isEditRow;
    private int iRowPos;

    /** Creates new form FrmNotaAddItem */
    public FrmNotaAddItem(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    void setConn(Connection conn) {
        this.conn = conn;
    }

    void setIsToko(boolean b) {
        isToko = b;
    }

    void setCustomer(String s) {
        sCust = s;
    }

    void setSrcModel(DefaultTableModel srcModel) {
        this.srcModel = srcModel;
    }

    void setIsEditRow(boolean b) {
        isEditRow = b;
    }

    void setRowPos(int i) {
        iRowPos = i;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        txtMerk = new javax.swing.JTextField();
        txtQty = new javax.swing.JTextField();
        txtSatuan = new javax.swing.JTextField();
        txtKetSatuan = new javax.swing.JTextField();
        txtTarif = new javax.swing.JTextField();
        txtSubTotal = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        btnAdd = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtItemTrx = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setName("jPanel1"); // NOI18N
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtMerk.setName("txtMerk"); // NOI18N
        txtMerk.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtMerkFocusLost(evt);
            }
        });
        txtMerk.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtMerkKeyReleased(evt);
            }
        });
        jPanel1.add(txtMerk, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 20, 260, 22));

        txtQty.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtQty.setName("txtQty"); // NOI18N
        txtQty.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtQtyFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtQtyFocusLost(evt);
            }
        });
        jPanel1.add(txtQty, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 140, 60, 22));

        txtSatuan.setName("txtSatuan"); // NOI18N
        txtSatuan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSatuanActionPerformed(evt);
            }
        });
        txtSatuan.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSatuanKeyReleased(evt);
            }
        });
        jPanel1.add(txtSatuan, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 140, 80, 22));

        txtKetSatuan.setName("txtKetSatuan"); // NOI18N
        txtKetSatuan.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtKetSatuanKeyReleased(evt);
            }
        });
        jPanel1.add(txtKetSatuan, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 170, 80, 22));

        txtTarif.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtTarif.setName("txtTarif"); // NOI18N
        txtTarif.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTarifActionPerformed(evt);
            }
        });
        txtTarif.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtTarifFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtTarifFocusLost(evt);
            }
        });
        jPanel1.add(txtTarif, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 210, 94, 22));

        txtSubTotal.setFont(new java.awt.Font("Tahoma", 0, 24));
        txtSubTotal.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtSubTotal.setName("txtSubTotal"); // NOI18N
        txtSubTotal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSubTotalActionPerformed(evt);
            }
        });
        txtSubTotal.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtSubTotalFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtSubTotalFocusLost(evt);
            }
        });
        txtSubTotal.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtSubTotalKeyPressed(evt);
            }
        });
        jPanel1.add(txtSubTotal, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 210, 180, 30));

        jLabel1.setText("Tarif");
        jLabel1.setName("jLabel1"); // NOI18N
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 210, 100, 20));

        jLabel2.setText("Merk");
        jLabel2.setName("jLabel2"); // NOI18N
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, 100, 20));

        jLabel3.setText("Item Transaksi");
        jLabel3.setName("jLabel3"); // NOI18N
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, 100, 20));

        jLabel4.setText("Ukuran");
        jLabel4.setName("jLabel4"); // NOI18N
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 140, 100, 20));

        jLabel5.setText("Satuan");
        jLabel5.setName("jLabel5"); // NOI18N
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 140, 70, 20));

        jLabel6.setText("Ket. Satuan");
        jLabel6.setName("jLabel6"); // NOI18N
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 170, 100, 20));

        btnAdd.setText("Add");
        btnAdd.setName("btnAdd"); // NOI18N
        btnAdd.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnAddMouseClicked(evt);
            }
        });
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });
        btnAdd.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnAddKeyPressed(evt);
            }
        });
        jPanel1.add(btnAdd, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 250, 90, 30));

        jButton1.setText("Close");
        jButton1.setName("jButton1"); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 250, 90, 30));

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        txtItemTrx.setColumns(20);
        txtItemTrx.setRows(5);
        txtItemTrx.setName("txtItemTrx"); // NOI18N
        txtItemTrx.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtItemTrxKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(txtItemTrx);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 50, 380, 80));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 500, 290));

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-528)/2, (screenSize.height-346)/2, 528, 346);
    }// </editor-fold>//GEN-END:initComponents

private void txtMerkFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtMerkFocusLost
// TODO add your handling code here:
}//GEN-LAST:event_txtMerkFocusLost

private void txtMerkKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMerkKeyReleased
    try {
        switch (evt.getKeyCode()) {
            case java.awt.event.KeyEvent.VK_ENTER: {
                if (lst.isVisible()) {
                    Object[] obj = lst.getOResult();
                    if (obj.length > 0) {
                        txtMerk.setText(obj[0].toString());
                        lst.setVisible(false);
                    }
                }
                break;
            }
            case java.awt.event.KeyEvent.VK_DELETE: {
                lst.setFocusable(true);
                lst.requestFocus();

                break;
            }
            case java.awt.event.KeyEvent.VK_ESCAPE: {
                lst.setVisible(false);
                //txtMerk.setText("");
                txtMerk.requestFocus();
                break;
            }
            case java.awt.event.KeyEvent.VK_DOWN: {
                if (lst.isVisible()) {

                    lst.setFocusableWindowState(true);
                    lst.setVisible(true);
                    lst.requestFocus();
                }
                break;
            }
            default: {
                if (!evt.getKeyText(evt.getKeyCode()).equalsIgnoreCase("Up") || !evt.getKeyText(evt.getKeyCode()).equalsIgnoreCase("F2")) {
                    String sQry = "select merk " +
                            "from merk kon " +
                            "where (merk) iLike '%" + txtMerk.getText() + "%' ";

                    sQry += (isToko ? "and kode_cust='" + sCust + "' " : "");

                    System.out.println(sQry);
                    lst.setSQuery(sQry);

                    lst.setBounds(this.getX() + this.jPanel1.getX() + this.txtMerk.getX() + 3,
                            this.getY() + this.jPanel1.getY() + this.txtMerk.getY() + txtMerk.getHeight() + 30,
                            txtMerk.getWidth() + 20,
                            150);
                    lst.setFocusableWindowState(false);
                    lst.setTxtCari(txtMerk);
                    lst.setLblDes(new javax.swing.JLabel[]{});
                    lst.setColWidth(0, txtMerk.getWidth());


                    if (lst.getIRowCount() > 0) {
                        lst.setVisible(true);
                        requestFocusInWindow();
                        txtMerk.requestFocus();
                    } else {
                        lst.setVisible(false);
                        //txtMerk.setText("");
                        txtMerk.requestFocus();
                    }
                }
                break;
            }
        }
    } catch (SQLException se) {
        System.out.println(se.getMessage());
    }
}//GEN-LAST:event_txtMerkKeyReleased

private Double udfGetDouble(String sNum){
    Double hsl = 0.0;
    try {
        hsl = (fmt.parse(sNum)).doubleValue();

    } catch (ParseException ex) {
        hsl=0.0;
        System.out.println(ex.getMessage());
    }
    return hsl;
}

private void txtQtyFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtQtyFocusGained
    lst.setVisible(false);
}//GEN-LAST:event_txtQtyFocusGained

private void txtQtyFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtQtyFocusLost
    txtQty.setText(fmt.format(udfGetFloat(txtQty.getText())));
    if (!txtQty.getText().equalsIgnoreCase("0")) {
        txtSubTotal.setText(dFmt.format(udfGetDouble(txtQty.getText()) * udfGetDouble(txtTarif.getText())));
    } else {
        txtQty.setText("");
    }
}//GEN-LAST:event_txtQtyFocusLost

private void txtSatuanKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSatuanKeyReleased
    try {
        //String sCari = txtKepada.getText();
        switch (evt.getKeyCode()) {

            case java.awt.event.KeyEvent.VK_ENTER: {
                if (lst.isVisible()) {
                    Object[] obj = lst.getOResult();
                    if (obj.length > 0) {
                        txtSatuan.setText(obj[0].toString());
                        lst.setVisible(false);
                    }
                }
                break;
            }
            case java.awt.event.KeyEvent.VK_DELETE: {
                lst.setFocusable(true);
                lst.requestFocus();

                break;
            }
            case java.awt.event.KeyEvent.VK_ESCAPE: {
                lst.setVisible(false);
                txtSatuan.setText("");

                break;
            }

            case java.awt.event.KeyEvent.VK_DOWN: {
                if (lst.isVisible()) {

                    lst.setFocusableWindowState(true);
                    lst.setVisible(true);
                    lst.requestFocus();
                }
                break;
            }
            default: {
                if (!evt.getKeyText(evt.getKeyCode()).equalsIgnoreCase("Up") || !evt.getKeyText(evt.getKeyCode()).equalsIgnoreCase("F2")) {

                    String sQry = "select distinct coalesce(satuan,'') as satuan " +
                            "from nota_satuan where coalesce(satuan,'') iLike '%" + txtSatuan.getText() + "%' order by 1 ";

//                        
                    System.out.println(sQry);
                    lst.setSQuery(sQry);

                    lst.setBounds(this.getX() + this.jPanel1.getX() + this.txtSatuan.getX() + 3,
                            this.getY() + this.jPanel1.getY() + this.txtSatuan.getY() + txtSatuan.getHeight() + 30,
                            txtSatuan.getWidth(),
                            100);
                    lst.setFocusableWindowState(false);
                    lst.setTxtCari(txtSatuan);
                    lst.setLblDes(new javax.swing.JLabel[]{});
                    lst.setColWidth(0, txtSatuan.getWidth());

                    if (lst.getIRowCount() > 0) {
                        lst.setVisible(true);
                        requestFocusInWindow();
                        txtSatuan.requestFocus();
                    } else {
                        lst.setVisible(false);
                        //txtKepada.setText("");
                        txtSatuan.requestFocus();
                    }
                }
                break;
            }
        }
    } catch (SQLException se) {
        System.out.println(se.getMessage());
    }
}//GEN-LAST:event_txtSatuanKeyReleased

private void txtKetSatuanKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtKetSatuanKeyReleased
    try {
        switch (evt.getKeyCode()) {
            case java.awt.event.KeyEvent.VK_ENTER: {
                if (lst.isVisible()) {
                    Object[] obj = lst.getOResult();
                    if (obj.length > 0) {
                        txtKetSatuan.setText(obj[0].toString());
                        lst.setVisible(false);
                    }
                }
                break;
            }
            case java.awt.event.KeyEvent.VK_DELETE: {
                lst.setFocusable(true);
                lst.requestFocus();

                break;
            }
            case java.awt.event.KeyEvent.VK_ESCAPE: {
                lst.setVisible(false);
                txtKetSatuan.setText("");

                break;
            }

            case java.awt.event.KeyEvent.VK_DOWN: {
                if (lst.isVisible()) {
                    lst.setFocusableWindowState(true);
                    lst.setVisible(true);
                    lst.requestFocus();
                }
                break;
            }
            default: {
                if (!evt.getKeyText(evt.getKeyCode()).equalsIgnoreCase("Up") || !evt.getKeyText(evt.getKeyCode()).equalsIgnoreCase("F2")) {

                    String sQry = "select coalesce(ket_satuan,'') as ket_satuan " +
                            "from nota_satuan where coalesce(ket_satuan,'') iLike '%" + txtKetSatuan.getText() + "%' " +
                            "and satuan ilike '" + txtSatuan.getText() + "%' order by 1 ";

//                        
                    System.out.println(sQry);
                    lst.setSQuery(sQry);

                    lst.setBounds(this.getX() + this.jPanel1.getX() + this.txtKetSatuan.getX() + 3,
                            this.getY() + this.jPanel1.getY() + this.txtKetSatuan.getY() + txtKetSatuan.getHeight() + 30,
                            txtKetSatuan.getWidth(),
                            100);
                    lst.setFocusableWindowState(false);
                    lst.setTxtCari(txtKetSatuan);
                    lst.setLblDes(new javax.swing.JLabel[]{});
                    lst.setColWidth(0, txtKetSatuan.getWidth());

                    if (lst.getIRowCount() > 0) {
                        lst.setVisible(true);
                        requestFocusInWindow();
                        txtKetSatuan.requestFocus();
                    } else {
                        lst.setVisible(false);
                        //txtKepada.setText("");
                        txtKetSatuan.requestFocus();
                    }
                }
                break;
            }
        }
    } catch (SQLException se) {
        System.out.println(se.getMessage());
    }
}//GEN-LAST:event_txtKetSatuanKeyReleased

private void txtTarifActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTarifActionPerformed
// TODO add your handling code here:
}//GEN-LAST:event_txtTarifActionPerformed

private void txtTarifFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtTarifFocusGained
    lst.setVisible(false);
}//GEN-LAST:event_txtTarifFocusGained

private void txtTarifFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtTarifFocusLost
    txtTarif.setText(fmt.format(udfGetFloat(txtTarif.getText())));
    if (udfGetFloat(txtTarif.getText()) > 0) {
        if (!txtQty.getText().trim().equalsIgnoreCase("")) {
            System.out.println("Qty   : " + udfGetDouble(txtQty.getText()));
            System.out.println("Tarif : " + udfGetDouble(txtTarif.getText()));
            txtSubTotal.setText(dFmt.format(udfGetDouble(txtQty.getText()) * udfGetDouble(txtTarif.getText())));


        }
    } else {
        txtTarif.setText("");
    }
}//GEN-LAST:event_txtTarifFocusLost

private void txtSubTotalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSubTotalActionPerformed
// TODO add your handling code here:
}//GEN-LAST:event_txtSubTotalActionPerformed

private void txtSubTotalFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtSubTotalFocusGained
    lst.setVisible(false);
}//GEN-LAST:event_txtSubTotalFocusGained

private void txtSubTotalFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtSubTotalFocusLost
//    txtSubTotal.setText(fmt.format(udfGetFloat(txtSubTotal.getText())));
//
//    if (udfGetDouble(txtSubTotal.getText()) != udfGetDouble(dFmt.format(udfGetDouble(txtQty.getText()) * udfGetDouble(txtTarif.getText()))) &&
//            !txtQty.getText().equalsIgnoreCase("")) {
//
//        txtQty.setText("");
//        txtTarif.setText("");
//    }
    txtSubTotal.setText(fmt.format(udfGetDouble(txtSubTotal.getText())));
        if(udfGetDouble(txtSubTotal.getText())==udfGetDouble(dFmt.format(udfGetDouble(txtQty.getText())*udfGetDouble(txtTarif.getText()))) ){
            txtQty.setText("");
            txtTarif.setText("");
        } else{
            return;
        }
}//GEN-LAST:event_txtSubTotalFocusLost

private void txtSubTotalKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSubTotalKeyPressed
//        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
//            udfAddItem();
//        }
}//GEN-LAST:event_txtSubTotalKeyPressed

private void btnAddMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAddMouseClicked
    udfAddItem();
}//GEN-LAST:event_btnAddMouseClicked

private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
// TODO add your handling code here:
}//GEN-LAST:event_btnAddActionPerformed

private void btnAddKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnAddKeyPressed
    if (evt.getKeyCode() == KeyEvent.VK_ENTER || evt.getKeyCode() == KeyEvent.VK_SPACE) {
        udfAddItem();
    }
}//GEN-LAST:event_btnAddKeyPressed

private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
    lst = new ListRsbm();
    lst2 = new ListRsbmNota();

    lst.setVisible(false);
    lst.setSize(500, 200);
    lst.con = conn;

    lst2.setVisible(false);
    lst2.setSize(500, 200);
    lst2.con = conn;

    MyKeyListener kListener=new MyKeyListener();
    for(int i=0;i<jPanel1.getComponentCount();i++){
            Component c = jPanel1.getComponent(i);
            if(c.getClass().getSimpleName().equalsIgnoreCase("JTEXTFIELD")    || c.getClass().getSimpleName().equalsIgnoreCase("JFormattedTextField")
            || c.getClass().getSimpleName().equalsIgnoreCase("JTextArea") || c.getClass().getSimpleName().equalsIgnoreCase("JComboBox")
            || c.getClass().getSimpleName().equalsIgnoreCase("JButton") || c.getClass().getSimpleName().equalsIgnoreCase("JCheckBox") 
            || c.getClass().getSimpleName().equalsIgnoreCase("JRadioButton")        ) {
                //System.out.println(c.getClass().getSimpleName());
                c.addKeyListener(kListener);
            }
        }
        
}//GEN-LAST:event_formWindowOpened

private void txtItemTrxKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtItemTrxKeyReleased
    if (txtItemTrx.getText().trim().equalsIgnoreCase("")) {
        return;
    }
    String sQry;

    try {
        //String sCari = txtKepada.getText();
        switch (evt.getKeyCode()) {

            case java.awt.event.KeyEvent.VK_ENTER: {
                if (lst2.isVisible()) {
                    Object[] obj = lst2.getOResult();
                    if (obj.length > 0) {
                        txtItemTrx.setText(obj[0].toString());
                        lst2.setVisible(false);
                    }
                }
                break;
            }
            case java.awt.event.KeyEvent.VK_DELETE: {
                lst2.setFocusable(true);
                lst2.requestFocus();

                break;
            }
            case java.awt.event.KeyEvent.VK_ESCAPE: {
                lst2.setVisible(false);
                txtItemTrx.setText("");

                break;
            }

            case java.awt.event.KeyEvent.VK_DOWN: {
                if (lst2.isVisible()) {

                    lst2.setFocusableWindowState(true);
                    lst2.setVisible(true);
                    lst2.requestFocus();
                }
                break;
            }
            default: {
                if (!evt.getKeyText(evt.getKeyCode()).equalsIgnoreCase("Up") || !evt.getKeyText(evt.getKeyCode()).equalsIgnoreCase("F2")) {

                    sQry = "select distinct item_trx from nota_item_trx where item_trx iLike '%" + txtItemTrx.getText() + "%' order by 1 ";

//                        
                    System.out.println(sQry);
                    lst2.setSQuery(sQry);

                    lst2.setBounds(this.getX() + this.jPanel1.getX() + this.txtItemTrx.getX() + 3,
                            this.getY() + this.jPanel1.getY() + this.txtItemTrx.getY() + txtItemTrx.getHeight() + 30,
                            txtItemTrx.getWidth(),
                            100);
                    lst2.setFocusableWindowState(false);
                    lst2.setTxtCari(txtItemTrx);
                    lst2.setLblDes(new javax.swing.JLabel[]{});
                    lst2.setColWidth(0, txtItemTrx.getWidth());

                    if (lst2.getIRowCount() > 0) {
                        lst2.setVisible(true);
                        requestFocusInWindow();
                        txtItemTrx.requestFocus();
                    } else {
                        lst2.setVisible(false);
                        //txtKepada.setText("");
                        txtItemTrx.requestFocus();
                    }
                }
                break;
            }
        }
    } catch (SQLException se) {
        System.out.println(se.getMessage());
    }
}//GEN-LAST:event_txtItemTrxKeyReleased

private void txtSatuanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSatuanActionPerformed
// TODO add your handling code here:
}//GEN-LAST:event_txtSatuanActionPerformed

private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
    this.dispose();
}//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                FrmNotaAddItem dialog = new FrmNotaAddItem(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {

                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    private float udfGetFloat(String sNum) {
        float hsl = 0;
        try {
            hsl = (fmt.parse(sNum)).floatValue();

        } catch (ParseException ex) {
            hsl = 0;
            System.out.println(ex.getMessage());
        }
        return hsl;
    }

    private void udfAddItem() {
        if (txtItemTrx.getText().trim().equalsIgnoreCase("")) {
            JOptionPane.showMessageDialog(this, "Silakan isi item transaksi terlebih dulu!");
            txtItemTrx.requestFocus();
            return;

        }
        if (udfGetFloat(txtSubTotal.getText()) == 0) {
            JOptionPane.showMessageDialog(this, "Silakan isi jumlah biaya terlebih dulu!");
            txtSubTotal.requestFocus();
            return;
        }

        if (!isEditRow) {
            srcModel.addRow(new Object[]{
                        txtMerk.getText(),
                        txtItemTrx.getText(),
                        udfGetFloat(txtQty.getText()),
                        txtSatuan.getText(),
                        txtKetSatuan.getText(),
                        udfGetFloat(txtTarif.getText()),
                        udfGetFloat(txtSubTotal.getText())
                    });
        } else {
            srcModel.setValueAt(txtMerk.getText(), iRowPos, 0);
            srcModel.setValueAt(txtItemTrx.getText(), iRowPos, 1);
            srcModel.setValueAt((udfGetFloat(txtQty.getText()) <= 0 ? "" : udfGetFloat(txtQty.getText())), iRowPos, 2);
            srcModel.setValueAt(txtSatuan.getText(), iRowPos, 3);
            srcModel.setValueAt(txtKetSatuan.getText(), iRowPos, 4);
            srcModel.setValueAt((udfGetFloat(txtTarif.getText()) <= 0 ? "" : udfGetFloat(txtTarif.getText())), iRowPos, 5);
            srcModel.setValueAt(udfGetFloat(txtSubTotal.getText()), iRowPos, 6);
        }

        //udfClearItem();
        //txtMerk.requestFocus();

        this.dispose();
    }

    public class MyKeyListener extends KeyAdapter {

        public void keyPressed(KeyEvent evt) {
            int keyKode = evt.getKeyCode();
            if (evt.getSource().equals(btnAdd)) {
                return;
            }
            switch (keyKode) {
                case KeyEvent.VK_ENTER: {

                    if (!lst.isVisible()) {
                        Component c = findNextFocus();
                        if (c != null) {
                            c.requestFocus();
                        }
                    } else {
                        lst.requestFocus();
                    }
                    break;
                }
                case KeyEvent.VK_UP: {
                    if (!lst.isVisible()) {
                        Component c = findPrevFocus();
                        if (c != null) {
                            c.requestFocus();
                        }
                    } else {
                        lst.requestFocus();
                    }
                    break;
                }
                case KeyEvent.VK_DOWN: {
                    if (!lst.isVisible()) {
                        Component c = findNextFocus();
                        if (c != null) {
                            c.requestFocus();
                        }
                    } else {
                        lst.requestFocus();
                    }
                    break;
                }


                case KeyEvent.VK_F3: {  //Search
                    //   udfFilter();

                    break;
                }

                case KeyEvent.VK_ESCAPE: {
                    //dispose();
                    break;
                }
                //default ;

            }
        }

        public Component findNextFocus() {
            // Find focus owner
            Component c = KeyboardFocusManager.getCurrentKeyboardFocusManager().getFocusOwner();
            Container root = c == null ? null : c.getFocusCycleRootAncestor();

            if (root != null) {
                FocusTraversalPolicy policy = root.getFocusTraversalPolicy();
                Component nextFocus = policy.getComponentAfter(root, c);
                if (nextFocus == null) {
                    nextFocus = policy.getDefaultComponent(root);
                }
                return nextFocus;
            }
            return null;
        }

        public Component findPrevFocus() {
            // Find focus owner
            Component c = KeyboardFocusManager.getCurrentKeyboardFocusManager().getFocusOwner();
            Container root = c == null ? null : c.getFocusCycleRootAncestor();

            if (root != null) {
                FocusTraversalPolicy policy = root.getFocusTraversalPolicy();
                Component prevFocus = policy.getComponentBefore(root, c);
                if (prevFocus == null) {
                    prevFocus = policy.getDefaultComponent(root);
                }
                return prevFocus;
            }
            return null;
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea txtItemTrx;
    private javax.swing.JTextField txtKetSatuan;
    private javax.swing.JTextField txtMerk;
    private javax.swing.JTextField txtQty;
    private javax.swing.JTextField txtSatuan;
    private javax.swing.JTextField txtSubTotal;
    private javax.swing.JTextField txtTarif;
    // End of variables declaration//GEN-END:variables
    private NumberFormat fmt = NumberFormat.getInstance();
    private NumberFormat dFmt = new DecimalFormat("#,##0");
}
