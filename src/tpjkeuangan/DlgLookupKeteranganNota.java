/*
 * DlgLookupKeterangan.java
 *
 * Created on May 13, 2008, 5:30 AM
 */

package tpjkeuangan;

import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.JTextArea;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author  oestadho
 */
public class DlgLookupKeteranganNota extends javax.swing.JDialog {
    Connection conn;
    boolean isNew=false, isEdit=false;
    DefaultTableModel myModel;
    private JTextArea srcText;
    
    /** Creates new form DlgLookupKeterangan */
    public DlgLookupKeteranganNota(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }
    
    void setCon(Connection con) {
        conn=con;
    }

    void setSrcText(JTextArea txtKeterangan) {
        srcText=txtKeterangan;
    }
    
    public class SelectionListener implements ListSelectionListener {
         JTable table;
         int rowPos;
         int colPos;
    
        // It is necessary to keep the table since it is not possible
        // to determine the table from the event's source
        SelectionListener(JTable table) {
            this.table = table;
        }
        public void valueChanged(ListSelectionEvent e) {
            if(table.getSelectedRow()>=0){
                txtKeterangan.setText(table.getValueAt(table.getSelectedRow(), 0).toString());
                chkDefault.setSelected((Boolean)table.getValueAt(table.getSelectedRow(), 1));
                    
                }
            }
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtKeterangan = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        btnClose = new javax.swing.JButton();
        btnAdd = new javax.swing.JButton();
        chkDefault = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null}
            },
            new String [] {
                "Keterangan", "Default"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);
        jTable1.getColumnModel().getColumn(0).setPreferredWidth(160);
        jTable1.getColumnModel().getColumn(1).setPreferredWidth(30);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(7, 12, 250, 260));

        txtKeterangan.setColumns(20);
        txtKeterangan.setRows(5);
        jScrollPane2.setViewportView(txtKeterangan);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(265, 34, 450, 170));

        jLabel1.setText("Keterangan Nota");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(266, 14, 280, 20));

        btnClose.setText("Batal");
        btnClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCloseActionPerformed(evt);
            }
        });
        getContentPane().add(btnClose, new org.netbeans.lib.awtextra.AbsoluteConstraints(623, 241, 90, 30));

        btnAdd.setText("Pilih");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });
        getContentPane().add(btnAdd, new org.netbeans.lib.awtextra.AbsoluteConstraints(532, 241, 90, 30));

        chkDefault.setText("Set Default");
        chkDefault.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkDefaultActionPerformed(evt);
            }
        });
        getContentPane().add(chkDefault, new org.netbeans.lib.awtextra.AbsoluteConstraints(264, 212, 130, -1));

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-732)/2, (screenSize.height-313)/2, 732, 313);
    }// </editor-fold>//GEN-END:initComponents

    private void btnCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCloseActionPerformed
        this.dispose();
        
    }//GEN-LAST:event_btnCloseActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        srcText.setText(txtKeterangan.getText());
        this.dispose();
        
    }//GEN-LAST:event_btnAddActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        SelectionListener listener=new SelectionListener(jTable1);
        jTable1.getSelectionModel().addListSelectionListener(listener);
        jTable1.getColumnModel().getSelectionModel().addListSelectionListener(listener);
        
        myModel=(DefaultTableModel)jTable1.getModel();
        myModel.setNumRows(0);
        jTable1.setModel(myModel);
        
        try{
            Statement st=conn.createStatement();
            ResultSet rs=st.executeQuery("select * from nota_keterangan where is_delete =false");
            
            while(rs.next()){
                myModel.addRow(new Object[]{
                    rs.getString(1),
                    rs.getBoolean(2)
                });
                
            }
            rs.close();
            st.close();
            
            if(myModel.getRowCount()>0){
                jTable1.setRowSelectionInterval(0, 0);
                jTable1.changeSelection(0, 0, false, false);
            }
        }catch(SQLException se){
            JOptionPane.showMessageDialog(this, "Load keterangan gagal!\n"+se.getMessage());
        }
        
    }//GEN-LAST:event_formWindowOpened

    private void chkDefaultActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkDefaultActionPerformed
        int iRow=jTable1.getSelectedRow();
        if(iRow>=0){
            try {
                String sUpd = "Update nota_keterangan set is_Default=false; " + "Update nota_keterangan set is_Default=true where keterangan='" + jTable1.getValueAt(iRow, 0).toString() + "'";
                int iDel = conn.createStatement().executeUpdate(sUpd);
                
                for(int i=0; i<jTable1.getRowCount(); i++){
                    myModel.setValueAt((i==iRow? true: false), iRow, 1);
                }
            } catch (SQLException ex) {
                Logger.getLogger(DlgLookupKeteranganNota.class.getName()).log(Level.SEVERE, null, ex);
            }
            
        }
    }//GEN-LAST:event_chkDefaultActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                DlgLookupKeteranganNota dialog = new DlgLookupKeteranganNota(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnClose;
    private javax.swing.JCheckBox chkDefault;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextArea txtKeterangan;
    // End of variables declaration//GEN-END:variables
    
}
