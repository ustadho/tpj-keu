/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package tpjkeuangan;

import com.ustasoft.services.BayarNotaServices;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JDesktopPane;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import main.GeneralFunction;

/**
 *
 * @author cak-ust
 */
public class FrmListPembayaranFilter extends javax.swing.JInternalFrame {
    private Connection conn;
    List lstKota=new ArrayList();
    private String sUsername;
    private JDesktopPane desktopPane;
    private List lstSerial=new ArrayList();
    private List lstKapal=new ArrayList();
    private GeneralFunction fn=new GeneralFunction();
    /**
     * Creates new form FrmListPembayaranFilter
     */
    public FrmListPembayaranFilter() {
        initComponents();
    }
    
    public void setConn(Connection c){
        this.conn=c;
    }
    
    private void udfLoadKapal(){
        if (cmbKota.getSelectedIndex() < 0 || conn == null) {
            return;
        }
        try {
            String sQry = "select distinct kt.kode_kapal, kapal.nama_kapal "
                    + "from nota_kapal_tujuan kt  "
                    + "inner join kota on kt.kota_tujuan=kota.kode_kota "
                    + "inner join kapal on kapal.kode_kapal=kt.kode_kapal "
                    + "where kt.kota_tujuan='" + lstKota.get(cmbKota.getSelectedIndex()).toString() + "' "
                    + "order by 2";
            System.out.println(sQry);
            lstKapal.clear();
            cmbKapal.removeAllItems();
            ResultSet rs = conn.createStatement().executeQuery(sQry);
            while (rs.next()) {
                lstKapal.add(rs.getString("kode_kapal"));
                cmbKapal.addItem(rs.getString("nama_kapal"));
            }
            rs.close();
        } catch (SQLException ex) {
            Logger.getLogger(FrmNotaJatuhTempo.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    private void udfLoadTglBerangkat(){
        if (cmbKota.getSelectedIndex()<0 ||cmbKapal.getSelectedIndex()<0 || conn == null) {
            return;
        }
        try {
            String sQry = "select distinct to_char(tgl_berangkat, 'dd/MM/yyyy') as tanggal, "
                    + "tgl_berangkat::date, serial_kode "
                    + "from "
                    + "nota_kapal_tujuan kt "
                    + "where kt.kota_tujuan='" + lstKota.get(cmbKota.getSelectedIndex()).toString() + "' "
                    + "and kode_kapal='" + lstKapal.get(cmbKapal.getSelectedIndex()).toString() + "' "
                    + "order by 2 desc";
            
            System.out.println(sQry);
            
            cmbTglBerangkat.removeAllItems();
            lstSerial.clear();
            ResultSet rs = conn.createStatement().executeQuery(sQry);
            while (rs.next()) {
                cmbTglBerangkat.addItem(rs.getString("tanggal"));
                lstSerial.add(rs.getInt("serial_kode"));
            }
            rs.close();
        } catch (SQLException ex) {
            Logger.getLogger(FrmNotaJatuhTempo.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        chkKota = new javax.swing.JCheckBox();
        cmbKota = new javax.swing.JComboBox();
        chkTahun = new javax.swing.JCheckBox();
        cmbTahun = new javax.swing.JComboBox();
        chkTglBayar = new javax.swing.JCheckBox();
        cmbKapal = new javax.swing.JComboBox();
        chkKapal = new javax.swing.JCheckBox();
        jXDatePicker1 = new org.jdesktop.swingx.JXDatePicker();
        jLabel1 = new javax.swing.JLabel();
        jXDatePicker2 = new org.jdesktop.swingx.JXDatePicker();
        cmbTglBerangkat = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();
        btnHapus = new javax.swing.JButton();
        btnKoreksi = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Pembayaran");
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameOpened(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        chkKota.setText("Kota Tujuan :");
        chkKota.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkKotaActionPerformed(evt);
            }
        });
        jPanel1.add(chkKota, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 10, 100, 20));

        cmbKota.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbKota.setEnabled(false);
        jPanel1.add(cmbKota, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 10, 240, 20));

        chkTahun.setSelected(true);
        chkTahun.setText("Tahun : ");
        chkTahun.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                chkTahunItemStateChanged(evt);
            }
        });
        jPanel1.add(chkTahun, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 100, 20));

        cmbTahun.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jPanel1.add(cmbTahun, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 10, 120, 20));

        chkTglBayar.setText("Tgl. Bayar :");
        chkTglBayar.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                chkTglBayarItemStateChanged(evt);
            }
        });
        chkTglBayar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkTglBayarActionPerformed(evt);
            }
        });
        jPanel1.add(chkTglBayar, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, 100, 20));

        cmbKapal.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbKapal.setEnabled(false);
        jPanel1.add(cmbKapal, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 35, 240, 20));

        chkKapal.setText("Kapal");
        chkKapal.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                chkKapalItemStateChanged(evt);
            }
        });
        chkKapal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkKapalActionPerformed(evt);
            }
        });
        jPanel1.add(chkKapal, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 35, 100, 20));

        jXDatePicker1.setEnabled(false);
        jPanel1.add(jXDatePicker1, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 60, 120, -1));

        jLabel1.setText("Sampai :");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 60, 50, 20));

        jXDatePicker2.setEnabled(false);
        jPanel1.add(jXDatePicker2, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 60, 120, -1));

        cmbTglBerangkat.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbTglBerangkat.setEnabled(false);
        jPanel1.add(cmbTglBerangkat, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 35, 110, 20));

        jLabel2.setText("Tgl. Berangkat :");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 34, 80, 20));

        jButton1.setText("Tampilkan");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 60, 100, -1));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Tanggal", "No. Pembayaran", "Merk", "Alat Pembayaran", "Jumlah", "No. Nota", "Customer"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Double.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jScrollPane1.setViewportView(jTable1);

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton2.setText("Close");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 10, 110, -1));

        btnHapus.setText("Hapus");
        btnHapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHapusActionPerformed(evt);
            }
        });
        jPanel2.add(btnHapus, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 110, -1));

        btnKoreksi.setText("Koreksi");
        btnKoreksi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnKoreksiActionPerformed(evt);
            }
        });
        jPanel2.add(btnKoreksi, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 10, 110, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 620, Short.MAX_VALUE))
                .addGap(12, 12, 12))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(99, 99, 99)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 240, Short.MAX_VALUE)))
                .addGap(10, 10, 10)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void chkKotaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkKotaActionPerformed
        cmbKota.setEnabled(chkKota.isSelected());
    }//GEN-LAST:event_chkKotaActionPerformed

    private void chkTglBayarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkTglBayarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_chkTglBayarActionPerformed

    private void chkKapalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkKapalActionPerformed
        
    }//GEN-LAST:event_chkKapalActionPerformed

    private void formInternalFrameOpened(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameOpened
        try {
            cmbTahun.removeAllItems();
            ResultSet rs = conn.createStatement().executeQuery("select distinct to_char(tgl_nota, 'yyyy') as tahun, to_Char(current_date, 'yyyy') as th_skg "
                    + "from nota order by to_char(tgl_nota, 'yyyy') desc");
            String sTahunSkg = "";
            while (rs.next()) {
                cmbTahun.addItem(rs.getString("tahun"));
                sTahunSkg = rs.getString("th_skg");
            }
            rs.close();
            cmbTahun.setSelectedItem(sTahunSkg);

            cmbKota.removeAllItems();
            rs = conn.createStatement().executeQuery("select * From kota order by nama_kota");
            while (rs.next()) {
                lstKota.add(rs.getString("kode_kota"));
                cmbKota.addItem(rs.getString("nama_kota"));
            }
            rs.close();
            
            cmbKota.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                udfLoadKapal();
            }
        });
        cmbKapal.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                udfLoadTglBerangkat();
            }
        });
        udfLoadKapal();
        udfLoadTglBerangkat();
        
        } catch (SQLException se) {
            JOptionPane.showMessageDialog(this, se.getMessage());
        }
    }//GEN-LAST:event_formInternalFrameOpened

    private void chkTahunItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_chkTahunItemStateChanged
        cmbTahun.setEnabled(chkTahun.isSelected());
    }//GEN-LAST:event_chkTahunItemStateChanged

    private void chkKapalItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_chkKapalItemStateChanged
        cmbKapal.setEnabled(chkKapal.isSelected());
        cmbTglBerangkat.setEnabled(chkKapal.isSelected());
    }//GEN-LAST:event_chkKapalItemStateChanged

    private void chkTglBayarItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_chkTglBayarItemStateChanged
        jXDatePicker1.setEnabled(chkTglBayar.isSelected());
        jXDatePicker2.setEnabled(chkTglBayar.isSelected());
    }//GEN-LAST:event_chkTglBayarItemStateChanged

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        udfFilter("");
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        this.dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void btnHapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHapusActionPerformed
        int iRow=jTable1.getSelectedRow();
        if(iRow<0)
            return;
        String sNoBayar=jTable1.getValueAt(iRow, jTable1.getColumnModel().getColumnIndex("No. Pembayaran")).toString();
        if(JOptionPane.showConfirmDialog(this, "Anda yakin untuk menghapus pembayaran '"+sNoBayar+"' ?", "Hapus pembayaran", JOptionPane.YES_NO_OPTION)==JOptionPane.NO_OPTION)
            return;
        try{
            String sKoreksi=new BayarNotaServices(conn).koreksiPembayaran(sNoBayar);
            JOptionPane.showMessageDialog(this, "Koreksi dibatalkan ('"+sKoreksi+"')");
            udfFilter("");
        }catch(SQLException se){
            JOptionPane.showMessageDialog(this, se.getMessage());
        }
    }//GEN-LAST:event_btnHapusActionPerformed

    private int getJmlNota(String sNoBayar) throws SQLException{
        int jmlBaris=0;
        ResultSet rs=conn.createStatement().executeQuery("select count(no_nota) from nota_pembayaran_detail where no_bayar='"+sNoBayar+"'");
        rs.next();
        jmlBaris=rs.getInt(1);
        rs.close();
        return jmlBaris;
    }
    
    private void btnKoreksiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnKoreksiActionPerformed
         int iRow=jTable1.getSelectedRow();
        if(iRow<0)
            return;
        String sNoBayar=jTable1.getValueAt(iRow, jTable1.getColumnModel().getColumnIndex("No. Pembayaran")).toString();
        try{
        if(getJmlNota(sNoBayar)==1){
            DlgBayarSatuNota d1=new DlgBayarSatuNota(JOptionPane.getFrameForComponent(this), true);
            d1.setConn(conn);
            d1.setSrcForm(this);
            d1.setNoBayar(sNoBayar);
            d1.setTitle("Koreksi pembayaran");
            d1.setVisible(true);
            
        }else{
            DlgBayarBanyakNota d1=new DlgBayarBanyakNota(JOptionPane.getFrameForComponent(this), true);
            d1.setConn(conn);
            d1.setSrcForm(d1);
            d1.setNoBayar(sNoBayar);
            d1.setTitle("Koreksi pembayaran");
            d1.setVisible(true);
            
        }
        }catch(SQLException se){
            JOptionPane.showMessageDialog(this, se.getMessage());
        }
    }//GEN-LAST:event_btnKoreksiActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnHapus;
    private javax.swing.JButton btnKoreksi;
    private javax.swing.JCheckBox chkKapal;
    private javax.swing.JCheckBox chkKota;
    private javax.swing.JCheckBox chkTahun;
    private javax.swing.JCheckBox chkTglBayar;
    private javax.swing.JComboBox cmbKapal;
    private javax.swing.JComboBox cmbKota;
    private javax.swing.JComboBox cmbTahun;
    private javax.swing.JComboBox cmbTglBerangkat;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private org.jdesktop.swingx.JXDatePicker jXDatePicker1;
    private org.jdesktop.swingx.JXDatePicker jXDatePicker2;
    // End of variables declaration//GEN-END:variables

    void setUserName(String sUserName) {
        this.sUsername=sUserName;
    }

    void setDesktop(JDesktopPane jDesktopPane1) {
        this.desktopPane=jDesktopPane1;
    }

    public void udfFilter(String sNoBayar) {
        String sFilterTgl=chkTglBayar.isSelected()? "and to_char(p.tanggal, 'yyyy-MM-dd')>='"+GeneralFunction.yyyymmdd_format.format(jXDatePicker1.getDate()) +"' "
                + "and to_char(p.tanggal, 'yyyy-MM-dd')>='"+GeneralFunction.yyyymmdd_format.format(jXDatePicker2.getDate()) +"' " : "";
        String sFilterKapal=chkKapal.isSelected()? "and kt.kode_kapal='"+lstKapal.get(cmbKapal.getSelectedIndex()).toString()+"' ": "";
        String sFilterKota=chkKota.isSelected()? "and kt.kota_tujuan='"+lstKota.get(cmbKota.getSelectedIndex()).toString() +"' ": "";
        String sFilterTahun=chkTahun.isSelected()? "and to_char(kt.tgl_berangkat, 'yyyy')='"+cmbTahun.getSelectedItem().toString() +"' ": "";
        
        
        ((DefaultTableModel)jTable1.getModel()).setNumRows(0);
        
        String sQry="select p.tanggal, p.no_bayar, coalesce(c.nama, coalesce(t.nama,'')) as cust , "
                + "gabung(distinct merk.merk) as merk, coalesce(ap.alat_pembayaran,'') as alat_pembayaran,"
                + "gabung(distinct d.no_nota) as no_nota, sum(d.jumlah) as jumlah "
                + "from nota_pembayaran p "
                + "inner join nota_pembayaran_detail d on d.no_bayar=p.no_bayar "
                + "inner join nota on nota.no_nota=d.no_nota "
                + "inner join nota_kapal_tujuan kt on kt.serial_kode=nota.seri_kapal "
                + "left join nota_alat_pembayaran ap on p.alat_bayar=ap.kode "
                + "left join customer c on c.kode_cust=p.kode_cust "
                + "left join toko t on t.kode_toko=p.kode_cust "
                + "left join merk on merk.kode_cust=c.kode_cust and p.to_tujuan=true "
                + "where void_check<>true "
                + sFilterTgl+" "
                + sFilterKapal+" "
                + sFilterKota+" "
                + sFilterTahun+" "
                + "group by p.tanggal, p.no_bayar, coalesce(c.nama, coalesce(t.nama,''))  , coalesce(ap.alat_pembayaran,'') "
                + "order by p.tanggal";
        System.out.println(sQry);
        int iRow=0;
        try{
            ResultSet rs=conn.createStatement().executeQuery(sQry);
            while(rs.next()){
                ((DefaultTableModel)jTable1.getModel()).addRow(new Object[]{
                    rs.getDate("tanggal"), 
                    rs.getString("no_bayar"), 
                    rs.getString("merk"), 
                    rs.getString("alat_pembayaran"), 
                    rs.getDouble("jumlah"),
                    rs.getString("no_nota"),
                    rs.getString("cust"), 
                    
                });
                if(sNoBayar.equalsIgnoreCase(rs.getString("no_bayar")))
                    iRow=jTable1.getRowCount()-1;
            }
            
            if(jTable1.getRowCount()>0){
                jTable1.setRowSelectionInterval(iRow, iRow);
                jTable1.setModel((DefaultTableModel) fn.autoResizeColWidth(jTable1, 
                        (DefaultTableModel) jTable1.getModel()).getModel());
            }
            
        }catch(SQLException se){
            JOptionPane.showMessageDialog(this, se.getMessage());
        }
    }
}
