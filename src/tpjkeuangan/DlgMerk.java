/*
 * DlgMerk.java
 *
 * Created on November 26, 2007, 9:45 PM
 */

package tpjkeuangan;

import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author  oestadho
 */
public class DlgMerk extends javax.swing.JDialog {
    Connection conn;
    DefaultTableModel srcModel;
    JTable srcTable;
    private boolean isNew;
    private String sKodeCust;
    Statement st;
    ResultSet rs;
    private String sMerk;
    
                        
    /** Creates new form DlgMerk */
    public DlgMerk(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }
    
    public void setSrcTable(JTable tbl){
        srcTable=tbl;
    }
    
    public void setSrcModel(DefaultTableModel df){
        srcModel=df;
    }
    
    public void setMerk(String s){
        sMerk=s;
    }
    
    public void setKodeCust(String s){
        sKodeCust=s;
    }
    
    public void setIsNew(boolean b){
        isNew=b;
        if(!isNew){
            try {
                st = conn.createStatement();
                rs=st.executeQuery("select * from merk where kode_cust='"+sKodeCust+"' and merk='"+sMerk+"'");
                
                if(rs.next()){
                    txtMerk.setText(rs.getString("merk"));
                    txtKet.setText(rs.getString("keterangan"));
                    
                }else
                {
                    txtMerk.setText(rs.getString(""));
                    txtKet.setText(rs.getString(""));
                    
                }
                
            } catch (SQLException ex) {
                Logger.getLogger(DlgMerk.class.getName()).log(Level.SEVERE, null, ex);
            }
            
        }
        
    }
    
    public void setConn(Connection con){
        this.conn=con;
    }
    
    private void  udfOK(){
        if(txtMerk.getText().equalsIgnoreCase("")){
            JOptionPane.showMessageDialog(this, "Silakan isi merk terlebih dulu!");
            txtMerk.requestFocus();
            return;
        }
        
        try {
        if(isNew){
                
                st = conn.createStatement();
                rs = st.executeQuery("Select * from merk where merk ='" + txtMerk.getText().trim() + "'");
                
                if(rs.next()){
                    JOptionPane.showMessageDialog(this, "Merk sudah ada. Silakan isikan merk lain!");
                    txtMerk.requestFocus();
                    st.close();
                    rs.close();
                    return;
                }
                
                st=conn.createStatement();
                rs=st.executeQuery("select * from merk limit 0");
                rs.moveToInsertRow();
                rs.updateString("kode_cust", sKodeCust);
                rs.updateString("merk", txtMerk.getText());
                rs.updateString("keterangan", txtKet.getText());
                rs.insertRow();
                
                srcModel.addRow(new Object[]{
                    txtMerk.getText(),
                    txtKet.getText()
                });
                
            }
        else{
            rs.updateString("kode_cust", sKodeCust);
            rs.updateString("merk", txtMerk.getText());
            rs.updateString("keterangan", txtKet.getText());
            rs.updateRow();
            
            srcModel.setValueAt(txtMerk.getText(), srcTable.getSelectedRow(), 0);
            srcModel.setValueAt(txtKet.getText(), srcTable.getSelectedRow(), 1);
        }
        
        this.dispose();
        st.close();
        rs.close();
        
        } catch (SQLException ex) {
            Logger.getLogger(DlgMerk.class.getName()).log(Level.SEVERE, null, ex);
        }
            
        
    }
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtMerk = new javax.swing.JTextField();
        txtKet = new javax.swing.JTextField();
        btnOK = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setText("Merk");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(15, 21, 76, -1));

        jLabel5.setText("Keterangan");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(14, 49, 82, -1));

        txtMerk.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtMerk.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtMerkKeyPressed(evt);
            }
        });
        getContentPane().add(txtMerk, new org.netbeans.lib.awtextra.AbsoluteConstraints(97, 18, 430, 21));

        txtKet.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtKet.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtKetKeyPressed(evt);
            }
        });
        getContentPane().add(txtKet, new org.netbeans.lib.awtextra.AbsoluteConstraints(97, 45, 473, 21));

        btnOK.setText("OK");
        btnOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOKActionPerformed(evt);
            }
        });
        btnOK.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnOKKeyPressed(evt);
            }
        });
        getContentPane().add(btnOK, new org.netbeans.lib.awtextra.AbsoluteConstraints(422, 80, 67, 27));

        btnCancel.setText("Cancel");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });
        getContentPane().add(btnCancel, new org.netbeans.lib.awtextra.AbsoluteConstraints(497, 80, -1, 28));

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-588)/2, (screenSize.height-163)/2, 588, 163);
    }// </editor-fold>//GEN-END:initComponents

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        this.dispose();
}//GEN-LAST:event_btnCancelActionPerformed

    private void btnOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOKActionPerformed
        udfOK();
}//GEN-LAST:event_btnOKActionPerformed

    private void btnOKKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnOKKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_ENTER)
            udfOK();
}//GEN-LAST:event_btnOKKeyPressed

    private void txtMerkKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMerkKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==KeyEvent.VK_ENTER ||evt.getKeyCode()==KeyEvent.VK_DOWN){
            txtKet.requestFocus();
        }
    }//GEN-LAST:event_txtMerkKeyPressed

    private void txtKetKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtKetKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_ENTER ||evt.getKeyCode()==KeyEvent.VK_DOWN){
            btnOK.requestFocus();
        }else if(evt.getKeyCode()==KeyEvent.VK_UP){
            txtMerk.requestFocus();
        }
    }//GEN-LAST:event_txtKetKeyPressed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                DlgMerk dialog = new DlgMerk(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnOK;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JTextField txtKet;
    private javax.swing.JTextField txtMerk;
    // End of variables declaration//GEN-END:variables
    
}
