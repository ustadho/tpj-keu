/*
 * edit_and_show_Jadwal.java
 *
 * Created on March 21, 2008, 5:53 PM
 */

package tableRender;

import java.awt.Color;
import java.awt.Component;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.AbstractListModel;
import javax.swing.JLabel;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.ListCellRenderer;
import javax.swing.ListModel;
import javax.swing.UIManager;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import javax.swing.table.TableCellRenderer;

//import menufakultas.ColumnGroup;
//import menufakultas.GroupableTableHeader;
//import menufakultas.AttributiveCellTableModel;
//import menufakultas.CellSpan;
//import menufakultas.MultiSpanCellTable;
//import menufakultas.ColoredCell;

/**
 *
 * @author  dwikk
 */
public class edit_and_show_Jadwal extends javax.swing.JFrame {
    private DefaultTableModel modelTbl;
    private Connection conn;
    private Object obj[];
    private int colCount=0;
    private String kdJur,sThAkad,sSmtAkad,sHari,sKdFak;
    AttributiveCellTableModel ml;
    MultiSpanCellTable table;
    Object[] colum;
    Object[] ruangan;
    private CellSpan cellAtt;
    String hari[]=new String[]{"SENIN","SELASA","RABU","KAMIS","JUM'AT","SABTU","MINGGU"};
    JScrollPane scroll;
    final int fixJmlRow=4;
    private boolean tukar=false;
    private String sPagiSore;
    boolean mk_hanyapindah=false;
    boolean mk2kosong=true;
    boolean tambah=false;
    String[] sKdDosen1=new String[10];
    String[] sKdDosen2=new String[10];
//    frmTambahJdwAuto tambahAuto=new frmTambahJdwAuto();
    
    /** Creates new form edit_and_show_Jadwal */
    public edit_and_show_Jadwal() {
        initComponents();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblHeader = new javax.swing.JLabel();
        btnSenin = new javax.swing.JButton();
        btnSelasa = new javax.swing.JButton();
        btnRabu = new javax.swing.JButton();
        btnKamis = new javax.swing.JButton();
        BtnJumat = new javax.swing.JButton();
        btnSabtu = new javax.swing.JButton();
        btnMinggu = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        lblTukar11 = new javax.swing.JLabel();
        lblTukar1_Kdmktawar = new javax.swing.JLabel();
        lblTukar1_kelas = new javax.swing.JLabel();
        lblTukar1_dosen = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        lblTukar1_smt = new javax.swing.JLabel();
        lblTukar1_sks = new javax.swing.JLabel();
        lblTukar1_jam_ke = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        lblTukar1_jam_ke1 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        lblTukar1_hari = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        lblTukar1_KdRuang = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        lblTukar21 = new javax.swing.JLabel();
        lblTukar2_Kdmktawar = new javax.swing.JLabel();
        lblTukar2_kelas = new javax.swing.JLabel();
        lblTukar2_dosen = new javax.swing.JLabel();
        lblTukar2_smt = new javax.swing.JLabel();
        lblTukar2_sks = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        lblTukar2_jam_ke = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        lblTukar2_jam_ke1 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        lblTukar2_hari = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        lblTukar2_KdRuang = new javax.swing.JLabel();
        btnDoTukar = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        btnTukar = new javax.swing.JButton();
        btnTambah = new javax.swing.JButton();
        btnKeluar = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        txtCariMtk = new javax.swing.JTextField();
        btnDelete = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Edit Jadwal Matakuliah");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblHeader.setBackground(new java.awt.Color(0, 0, 153));
        lblHeader.setFont(new java.awt.Font("Arial", 0, 24));
        lblHeader.setForeground(new java.awt.Color(255, 255, 0));
        lblHeader.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblHeader.setText("EDIT JADWAL");
        lblHeader.setOpaque(true);
        getContentPane().add(lblHeader, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 45, 882, 33));

        btnSenin.setFont(new java.awt.Font("Tahoma", 1, 11));
        btnSenin.setText("Senin");
        btnSenin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSeninActionPerformed(evt);
            }
        });
        getContentPane().add(btnSenin, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 9, 96, 30));

        btnSelasa.setFont(new java.awt.Font("Tahoma", 1, 11));
        btnSelasa.setText("Selasa");
        btnSelasa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSelasaActionPerformed(evt);
            }
        });
        getContentPane().add(btnSelasa, new org.netbeans.lib.awtextra.AbsoluteConstraints(135, 9, 99, 30));

        btnRabu.setFont(new java.awt.Font("Tahoma", 1, 11));
        btnRabu.setText("Rabu");
        btnRabu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRabuActionPerformed(evt);
            }
        });
        getContentPane().add(btnRabu, new org.netbeans.lib.awtextra.AbsoluteConstraints(258, 9, 93, 30));

        btnKamis.setFont(new java.awt.Font("Tahoma", 1, 11));
        btnKamis.setText("Kamis");
        btnKamis.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnKamisActionPerformed(evt);
            }
        });
        getContentPane().add(btnKamis, new org.netbeans.lib.awtextra.AbsoluteConstraints(381, 9, 96, 30));

        BtnJumat.setFont(new java.awt.Font("Tahoma", 1, 11));
        BtnJumat.setText("Jum'at");
        BtnJumat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnJumatActionPerformed(evt);
            }
        });
        getContentPane().add(BtnJumat, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 9, 99, 30));

        btnSabtu.setFont(new java.awt.Font("Tahoma", 1, 11));
        btnSabtu.setText("Sabtu");
        btnSabtu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSabtuActionPerformed(evt);
            }
        });
        getContentPane().add(btnSabtu, new org.netbeans.lib.awtextra.AbsoluteConstraints(645, 9, 99, 30));

        btnMinggu.setFont(new java.awt.Font("Tahoma", 1, 11));
        btnMinggu.setText("Minggu");
        btnMinggu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMingguActionPerformed(evt);
            }
        });
        getContentPane().add(btnMinggu, new org.netbeans.lib.awtextra.AbsoluteConstraints(774, 9, 105, 30));

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true), "Matakuliah Tukar 1", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(0, 0, 0)));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblTukar11.setBackground(new java.awt.Color(208, 242, 246));
        lblTukar11.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        lblTukar11.setOpaque(true);
        jPanel2.add(lblTukar11, new org.netbeans.lib.awtextra.AbsoluteConstraints(84, 15, 309, 21));

        lblTukar1_Kdmktawar.setBackground(new java.awt.Color(208, 242, 246));
        lblTukar1_Kdmktawar.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        lblTukar1_Kdmktawar.setOpaque(true);
        jPanel2.add(lblTukar1_Kdmktawar, new org.netbeans.lib.awtextra.AbsoluteConstraints(84, 39, 129, 21));

        lblTukar1_kelas.setBackground(new java.awt.Color(208, 242, 246));
        lblTukar1_kelas.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        lblTukar1_kelas.setOpaque(true);
        jPanel2.add(lblTukar1_kelas, new org.netbeans.lib.awtextra.AbsoluteConstraints(84, 63, 36, 21));

        lblTukar1_dosen.setBackground(new java.awt.Color(208, 242, 246));
        lblTukar1_dosen.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        lblTukar1_dosen.setOpaque(true);
        jPanel2.add(lblTukar1_dosen, new org.netbeans.lib.awtextra.AbsoluteConstraints(84, 87, 309, 21));

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel1.setText("Matakuliah");
        jPanel2.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(9, 18, 66, 18));

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("Kode Mtk");
        jPanel2.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(9, 42, 66, 18));

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setText("Kelas");
        jPanel2.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(9, 66, 66, 18));

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel5.setText("Dosen");
        jPanel2.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(9, 90, 66, 18));

        lblTukar1_smt.setBackground(new java.awt.Color(208, 242, 246));
        lblTukar1_smt.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        lblTukar1_smt.setOpaque(true);
        jPanel2.add(lblTukar1_smt, new org.netbeans.lib.awtextra.AbsoluteConstraints(177, 63, 36, 21));

        lblTukar1_sks.setBackground(new java.awt.Color(208, 242, 246));
        lblTukar1_sks.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        lblTukar1_sks.setOpaque(true);
        jPanel2.add(lblTukar1_sks, new org.netbeans.lib.awtextra.AbsoluteConstraints(249, 63, 27, 21));

        lblTukar1_jam_ke.setBackground(new java.awt.Color(208, 242, 246));
        lblTukar1_jam_ke.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        lblTukar1_jam_ke.setOpaque(true);
        jPanel2.add(lblTukar1_jam_ke, new org.netbeans.lib.awtextra.AbsoluteConstraints(318, 39, 24, 21));

        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel6.setText("Jam");
        jPanel2.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(279, 39, 33, 21));

        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel7.setText("SKS");
        jPanel2.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(216, 63, 27, 21));

        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel8.setText("SMT");
        jPanel2.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(123, 63, 45, 21));

        lblTukar1_jam_ke1.setBackground(new java.awt.Color(208, 242, 246));
        lblTukar1_jam_ke1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        lblTukar1_jam_ke1.setOpaque(true);
        jPanel2.add(lblTukar1_jam_ke1, new org.netbeans.lib.awtextra.AbsoluteConstraints(366, 39, 27, 21));

        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel12.setText("s/d");
        jPanel2.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(345, 39, 18, 21));

        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel14.setText("Hari");
        jPanel2.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(216, 39, 27, 21));

        lblTukar1_hari.setBackground(new java.awt.Color(208, 242, 246));
        lblTukar1_hari.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        lblTukar1_hari.setOpaque(true);
        jPanel2.add(lblTukar1_hari, new org.netbeans.lib.awtextra.AbsoluteConstraints(249, 39, 27, 21));

        jLabel16.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel16.setText("Ruang");
        jPanel2.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(279, 63, 36, 21));

        lblTukar1_KdRuang.setBackground(new java.awt.Color(208, 242, 246));
        lblTukar1_KdRuang.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        lblTukar1_KdRuang.setOpaque(true);
        jPanel2.add(lblTukar1_KdRuang, new org.netbeans.lib.awtextra.AbsoluteConstraints(318, 63, 75, 21));

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(9, 513, 402, 117));

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true), "Matakuliah Tukar 2", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(0, 0, 0)));
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblTukar21.setBackground(new java.awt.Color(124, 164, 249));
        lblTukar21.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        lblTukar21.setOpaque(true);
        jPanel3.add(lblTukar21, new org.netbeans.lib.awtextra.AbsoluteConstraints(9, 15, 324, 21));

        lblTukar2_Kdmktawar.setBackground(new java.awt.Color(124, 164, 249));
        lblTukar2_Kdmktawar.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        lblTukar2_Kdmktawar.setOpaque(true);
        jPanel3.add(lblTukar2_Kdmktawar, new org.netbeans.lib.awtextra.AbsoluteConstraints(9, 39, 135, 21));

        lblTukar2_kelas.setBackground(new java.awt.Color(124, 164, 249));
        lblTukar2_kelas.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        lblTukar2_kelas.setOpaque(true);
        jPanel3.add(lblTukar2_kelas, new org.netbeans.lib.awtextra.AbsoluteConstraints(9, 63, 48, 21));

        lblTukar2_dosen.setBackground(new java.awt.Color(124, 164, 249));
        lblTukar2_dosen.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        lblTukar2_dosen.setOpaque(true);
        jPanel3.add(lblTukar2_dosen, new org.netbeans.lib.awtextra.AbsoluteConstraints(9, 87, 324, 21));

        lblTukar2_smt.setBackground(new java.awt.Color(124, 164, 249));
        lblTukar2_smt.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        lblTukar2_smt.setOpaque(true);
        jPanel3.add(lblTukar2_smt, new org.netbeans.lib.awtextra.AbsoluteConstraints(102, 63, 42, 21));

        lblTukar2_sks.setBackground(new java.awt.Color(124, 164, 249));
        lblTukar2_sks.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        lblTukar2_sks.setOpaque(true);
        jPanel3.add(lblTukar2_sks, new org.netbeans.lib.awtextra.AbsoluteConstraints(183, 63, 27, 21));

        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel9.setText("SKS");
        jPanel3.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(147, 63, 30, 21));

        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel10.setText("SMT");
        jPanel3.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(63, 63, 33, 21));

        lblTukar2_jam_ke.setBackground(new java.awt.Color(124, 164, 249));
        lblTukar2_jam_ke.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        lblTukar2_jam_ke.setOpaque(true);
        jPanel3.add(lblTukar2_jam_ke, new org.netbeans.lib.awtextra.AbsoluteConstraints(249, 39, 24, 21));

        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel11.setText("Jam");
        jPanel3.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(216, 39, 27, 21));

        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel13.setText("s/d");
        jPanel3.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(276, 39, 24, 21));

        lblTukar2_jam_ke1.setBackground(new java.awt.Color(124, 164, 249));
        lblTukar2_jam_ke1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        lblTukar2_jam_ke1.setOpaque(true);
        jPanel3.add(lblTukar2_jam_ke1, new org.netbeans.lib.awtextra.AbsoluteConstraints(303, 39, 30, 21));

        jLabel15.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel15.setText("Hari");
        jPanel3.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 39, 27, 21));

        lblTukar2_hari.setBackground(new java.awt.Color(124, 164, 249));
        lblTukar2_hari.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        lblTukar2_hari.setOpaque(true);
        jPanel3.add(lblTukar2_hari, new org.netbeans.lib.awtextra.AbsoluteConstraints(183, 39, 27, 21));

        jLabel17.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel17.setText("Ruang");
        jPanel3.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 63, 36, 21));

        lblTukar2_KdRuang.setBackground(new java.awt.Color(124, 164, 249));
        lblTukar2_KdRuang.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        lblTukar2_KdRuang.setOpaque(true);
        jPanel3.add(lblTukar2_KdRuang, new org.netbeans.lib.awtextra.AbsoluteConstraints(249, 63, 84, 21));

        getContentPane().add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(543, 510, 345, 117));

        btnDoTukar.setText("<<TUKAR>>");
        btnDoTukar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDoTukarActionPerformed(evt);
            }
        });
        getContentPane().add(btnDoTukar, new org.netbeans.lib.awtextra.AbsoluteConstraints(414, 543, 126, 63));

        jPanel1.setBackground(new java.awt.Color(0, 0, 153));

        btnTukar.setText("Tukar");
        btnTukar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTukarActionPerformed(evt);
            }
        });

        btnTambah.setText("Tambah");
        btnTambah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTambahActionPerformed(evt);
            }
        });

        btnKeluar.setText("Keluar");
        btnKeluar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnKeluarActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11));
        jLabel2.setForeground(new java.awt.Color(255, 255, 51));
        jLabel2.setText("Cari Mtk.");

        txtCariMtk.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtCariMtkKeyReleased(evt);
            }
        });

        btnDelete.setText("Hapus");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .add(jLabel2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 61, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(txtCariMtk, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 285, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 238, Short.MAX_VALUE)
                .add(btnTukar)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(btnTambah)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(btnDelete)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(btnKeluar)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(txtCariMtk, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 26, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(btnKeluar, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 33, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 23, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(btnDelete, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 33, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(btnTambah, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 33, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(btnTukar, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 33, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 633, 882, 60));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tambahJadwal(String sKdmktawar,String sKelas,String Dsn1,String Dsn2,String Dsn3){
        /*
        try{
            boolean okProses=true;
            String sSql="Select * from Jadwal J WHERE J.KDFAK ='" + sKdFak.trim() + "' and J.sttpakai ='" + sPagiSore.trim() + "' " +
                    "And ThAkad='" + sThAkad.trim() + "' and Smt='" + sSmtAkad.trim() + "' and kdmktawar='" + sKdmktawar + "' and KodeKelas='" + sKelas + "'";
            Statement st=conn.createStatement();
            ResultSet rs1=st.executeQuery(sSql);
            if (rs1.next()){
               JOptionPane.showMessageDialog(this,"Matakuliah Sudah Terjadwal !!"); 
               okProses=false;
            }
            if (okProses){
                sSql="select * from plotdosen where kdmktawar='"+sKdmktawar.trim()+"' and kodekelas='"+sKelas.trim()+"' and kddosen='"+Dsn1.trim()+"'";
                rs1=st.executeQuery(sSql);
                if (!rs1.next()){
                    st.executeUpdate("insert into PlotDosen(KdDosen, KdMkTawar,KodeKelas) values ('" + Dsn1.trim() + "','" +sKdmktawar.trim() + "','" + sKelas.trim()+ "')");
                }
                sSql="select * from plotdosen where kdmktawar='"+sKdmktawar.trim()+"' and kodekelas='"+sKelas.trim()+"' and kddosen='"+Dsn2.trim()+"'";
                rs1=st.executeQuery(sSql);
                if (!rs1.next()){
                    st.executeUpdate("insert into PlotDosen(KdDosen, KdMkTawar,KodeKelas) values ('" + Dsn2.trim() + "','" +sKdmktawar.trim() + "','" + sKelas.trim()+ "')");
                }
                sSql="select * from plotdosen where kdmktawar='"+sKdmktawar.trim()+"' and kodekelas='"+sKelas.trim()+"' and kddosen='"+Dsn3.trim()+"'";
                rs1=st.executeQuery(sSql);
                if (!rs1.next()){
                    st.executeUpdate("insert into PlotDosen(KdDosen, KdMkTawar,KodeKelas) values ('" + Dsn3.trim() + "','" +sKdmktawar.trim() + "','" + sKelas.trim()+ "')");
                }
                int iSks=0;
                sSql="select sksajar from plotdosen where kdmktawar='"+sKdmktawar.trim()+"' and kodekelas='"+sKelas.trim()+"'";
                rs1=st.executeQuery(sSql);
                if (rs1.next()){
                    iSks=rs1.getInt("sksajar");
                }
                
                Statement st1=conn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_READ_ONLY);
                sSql="Select *,H.hari, Jam.Jamawal,J.KodeKelas || J.kdhari || cast(J.KdJam as varchar(2)) as fKlsHrJam,J.KdMkTawar || J.KodeKelas || J.KdHari || cast(J.KdJam as varchar(2)) as  fMKKLSHrJam " +
                     "from Jadwal J inner join Jam on J.KdJam = Jam.KdJam inner join Hari H on J.KdHari= H.KdHari " +
                     "WHERE J.KDFAK ='" + sKdFak.trim() + "' and J.sttpakai ='" + sPagiSore.trim() + "' " +
                     "And ThAkad='" + sThAkad.trim() + "' and Smt='" + sSmtAkad.trim() + "' and rtrim(ltrim(coalesce(kdmktawar,'')))=''" +
                     "order by J.Kdhari,J.KdRuang,J.KdJam";
                rs1=st1.executeQuery(sSql);
                boolean okFindJdw=false;
                int ii=1;
                while(ii<=2 && !okFindJdw){
                    rs1.beforeFirst();
                    while (rs1.next()&& !okFindJdw){
                        if ((ii == 1 && (rs1.getInt("kdhari")<6)) || (ii == 2 && (rs1.getInt("kdhari")>=6))) {
                            if(rs1.getInt("kdjam")!=0){
                                if(CekOkRuangTambah(rs1.getString("Kdruang"), rs1.getString("kdhari"), rs1.getInt("kdjam"),  iSks)){
                                    if(CekKressRuangPr(rs1.getString("Kdruang"), rs1.getString("kdhari"), rs1.getInt("kdjam"),  iSks)){
                                        if(CekKressKelasPr(tambahAuto.getKdJur().trim(), tambahAuto.getSemesterMtk().trim(), rs1.getString("kdhari"),rs1.getInt("kdjam"),  iSks)){
                                            if (CekKressDosenPr(Dsn1,Dsn2,Dsn3,rs1.getString("kdhari"),rs1.getInt("kdjam"),  iSks)){
                                                okFindJdw=true;
                                                Statement stt1=conn.createStatement();
                                                for(int jj=0;jj<iSks;jj++){
                                                   int ijam=rs1.getInt("kdjam"); 
                                                   ijam=ijam+jj;
                                                   String sSql1="update Jadwal set Kdmktawar='" + sKdmktawar.trim() + "', KodeKelas ='" +sKelas.trim() + "', kapasitas = 0" +
                                                   " where Kdhari='" + rs1.getString("kdhari") + "' and Kdjam =" + ijam + " and Kdruang ='" + rs1.getString("Kdruang") + "' and thakad='" + sThAkad.trim() + "' and smt ='" + sSmtAkad.trim() + "'"; 
                                                   stt1.executeUpdate(sSql1);
                                                }
                                                stt1.close();
                                                sHari=rs1.getString("kdhari");
                                                SplitCellTable();
                                                loadJadwalHari();
                                            }
                                        }
                                    }//
                                }
                            }
                        }
                    }
                    ii++;
                }
                st1.close();
            }
            st.close();
            rs1.close();
        }catch(SQLException se){
            System.out.println(se.getMessage());
        }*/
        
    }
    
    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
//        if(tambah && tambahAuto.getOK()){
//            JOptionPane.showMessageDialog(this,"kembali "+tambahAuto.getKdMkTawar()+"\n"+tambahAuto.getKelas()+"\n"+tambahAuto.getNIDN1());
//            tambahJadwal(tambahAuto.getKdMkTawar(),tambahAuto.getKelas(),tambahAuto.getNIDN1(),tambahAuto.getNIDN2(),tambahAuto.getNIDN3());
//            tambah=false;
//        }
    }//GEN-LAST:event_formWindowActivated

    private void btnTambahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTambahActionPerformed
        //frmTambahJdwAuto jdwAuto=new frmTambahJdwAuto();
////        tambahAuto.setCon(conn);
////        tambahAuto.setSThAkad(sThAkad.trim());
////        tambahAuto.setSSmtAkad(sSmtAkad.trim());
////        tambahAuto.setSPagiSore(sPagiSore.trim());
////        tambahAuto.setSFak(sKdFak.trim());
////        tambahAuto.setVisible(true);
////        tambah=true;
    }//GEN-LAST:event_btnTambahActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        UIManager.put(GroupableTableHeader.uiClassID, "menufakultas.GroupableTableHeaderUI");
        sHari="1";
        lblHeader.setText("EDIT JADWAL SENIN");
        tableLook();
        btnDoTukar.setEnabled(false);
    }//GEN-LAST:event_formWindowOpened

    public void setConn(Connection conn) {
        this.conn = conn;
    }

    public void setPagiSore(String pagisore){
        this.sPagiSore=pagisore;
    }
    
    public void setSSmtAkad(String sSmtAkad) {
        this.sSmtAkad = sSmtAkad;
    }

    public void setSKdFak(String sKdFak) {
        this.sKdFak = sKdFak;
    }

    public void setSThAkad(String sThAkad) {
        this.sThAkad = sThAkad;
    }
    
        private void comment4not_okJadwal(Boolean okharijam,Boolean oksmtmhs,Boolean okharijam2,Boolean oksmtmhs2){
        String msg1,msg2,msg3,msg4;
        if (!okharijam){
            msg1=lblTukar1_dosen.getText().trim()+" sedang mengajar hari "+hari[Integer.valueOf(lblTukar2_hari.getText().trim())-1]+" jam "+lblTukar2_jam_ke.getText().trim()+" s/d "+lblTukar2_jam_ke1.getText().trim()+"\n";
        }else{msg1="";}
        if(!oksmtmhs){
            msg2="Mahasiswa semester "+lblTukar1_smt.getText().trim()+" Kuliah dihari "+hari[Integer.valueOf(lblTukar2_hari.getText().trim())-1]+" jam "+lblTukar2_jam_ke.getText().trim()+" s/d "+lblTukar2_jam_ke1.getText().trim()+"\n";
        }else{msg2="";}
        if(okharijam && !okharijam2){
            msg3=lblTukar2_dosen.getText().trim()+" sedang mengajar hari "+hari[Integer.valueOf(lblTukar1_hari.getText().trim())-1]+" jam "+lblTukar1_jam_ke.getText().trim()+" s/d "+lblTukar1_jam_ke1.getText().trim()+"\n"; 
        }else{msg3="";}
        if(oksmtmhs && !oksmtmhs2){
            msg4="Mahasiswa semester "+lblTukar2_smt.getText().trim()+" Kuliah dihari "+hari[Integer.valueOf(lblTukar1_hari.getText().trim())-1]+" jam "+lblTukar1_jam_ke.getText().trim()+" s/d "+lblTukar1_jam_ke1.getText().trim();
        }else{msg4="";}
        JOptionPane.showMessageDialog(this,msg1+msg2+msg3+msg4);
    }
    
    private Boolean isTukarRuang(){
    boolean rtn;    
        if (lblTukar1_Kdmktawar.getText().trim().equalsIgnoreCase(lblTukar2_Kdmktawar.getText().trim()) 
            && lblTukar1_smt.getText().trim().equalsIgnoreCase(lblTukar2_smt.getText().trim()) 
            && lblTukar1_kelas.getText().trim().equalsIgnoreCase(lblTukar2_kelas.getText().trim())
            && lblTukar1_jam_ke.getText().trim().equalsIgnoreCase(lblTukar2_jam_ke.getText().trim())
            && lblTukar1_jam_ke1.getText().trim().equalsIgnoreCase(lblTukar2_jam_ke1.getText().trim())
            && lblTukar1_dosen.getText().trim().equalsIgnoreCase(lblTukar2_dosen.getText().trim())
            && !lblTukar1_KdRuang.getText().trim().equalsIgnoreCase(lblTukar2_KdRuang.getText().trim())
            ){
            rtn=true;
        }else if (lblTukar1_hari.getText().trim().equalsIgnoreCase(lblTukar2_hari.getText().trim())
            && lblTukar1_jam_ke.getText().trim().equalsIgnoreCase(lblTukar2_jam_ke.getText().trim())
            && lblTukar1_jam_ke1.getText().trim().equalsIgnoreCase(lblTukar2_jam_ke1.getText().trim())
            && !lblTukar1_KdRuang.getText().trim().equalsIgnoreCase(lblTukar2_KdRuang.getText().trim())
            ){
                rtn=true;
            }else{rtn=false;}
        return rtn;
    }
    
    private Boolean CekOkRuangTambah(String sKdRuang, String sKdHr,Integer nKdJam,Integer SKS){
        boolean okkress=false;
        try{
            String sSql="Select Count(*) as Ada from Jadwal " +
                    "where KdRuang ='" + sKdRuang + "' AND KdHari ='" + sKdHr.trim() + "' " +
                    "and KdJam between " + nKdJam+ " and " + (nKdJam+ SKS-1) + " " +
                    "and (KdMkTawar ='' or KdMkTawar is null) " +
                    "and thakad='" + sThAkad.trim() + "' and smt='" + sSmtAkad.trim() + "'";
            //System.out.println(sSql);
            Statement stat=conn.createStatement();
            ResultSet rs3=stat.executeQuery(sSql);
            if (rs3.next()){
                if(rs3.getInt("Ada")>=SKS){
                    okkress=true;
                }
            }
            stat.close();
            rs3.close();
        }catch(SQLException se){}
        return okkress;
    }
    
    private Boolean CekKressRuangPr(String sKdRuang, String sKdHr,Integer nKdJam,Integer SKS){
        boolean okkress=true;
        try{
            String sSql="Select Count(*) as Ada from Jadwal " +
                    "where KdRuang ='" + sKdRuang + "' AND KdHari ='" + sKdHr.trim() + "' " +
                    "and KdJam between " + nKdJam+ " and " + (nKdJam+ SKS-1) + " " +
                    "and (KdMkTawar ='' or KdMkTawar is null) and KdFak <>'" + sKdFak.trim() + "' " +
                    "and thakad='" + sThAkad.trim() + "' and smt='" + sSmtAkad.trim() + "'";
            Statement stat=conn.createStatement();
            ResultSet rs3=stat.executeQuery(sSql);
            if (rs3.next()){
                if(rs3.getInt("Ada")>0){
                    okkress=false;
                }
            }
            stat.close();
            rs3.close();
        }catch(SQLException se){}
        return okkress;
    }

    private Boolean CekKressKelasPr(String ssKdjur, String sSmtMtk,String sKdHr,Integer nKdJam,Integer SKS){
        boolean okkress=true;
        try{
//            String sSql="Select Count(*) as Ada from Jadwal " +
//                    "where thakad='" + sThAkad.trim() + "' and smt='" + sSmtAkad.trim() + "' " +
//                    "and KdHari ='" + sKdHr.trim() + "' and substring(kodekelas,2,1)='"+sSmtMtk+"' " +
//                    "and KdJam between " + nKdJam+ " and " + (nKdJam+ SKS-1) + " " +
//                    "and substring(kdjur,1,2)='"+ssKdjur.trim()+"'" ;
            String sSql="Select Count(*) as Ada from Jadwal " +
                    "where thakad='" + sThAkad.trim() + "' and smt='" + sSmtAkad.trim() + "' " +
                    "and KdHari ='" + sKdHr.trim() + "' and substring(kodekelas,2,1)='"+sSmtMtk+"' " +
                    "and substring(kdjur,1,2)='"+ssKdjur.trim()+"'" ;
            for(int ii=0;ii<SKS;ii++){
                sSql=sSql+" and kdjam="+nKdJam+ii;
            }
                    
            Statement stat=conn.createStatement();
            ResultSet rs3=stat.executeQuery(sSql);
            if (rs3.next()){
                if(rs3.getInt("Ada")>0){
                    okkress=false;
                }
            }
            stat.close();
            rs3.close();
        }catch(SQLException se){}
        return okkress;
    }

    private Boolean CekKressDosenPr(String sNIDN1,String sNIDN2,String sNIDN3, String sKdHr,Integer nKdJam,Integer SKS){
        boolean okkress=true;
        try{
            String sSql="Select count(*) as Ada from Jadwal J " +
                    "inner join plotdosen pl on pl.kdmktawar=j.kdmktawar and pl.kodekelas=j.kodekelas " +
                    "WHERE ThAkad='"+sThAkad.trim()+"' and Smt='"+sSmtAkad.trim()+"' and " +
                    "J.sttpakai ='"+sPagiSore.trim()+"' and rtrim(ltrim(coalesce(j.kdmktawar,'')))<>'' " +
                    "and j.kdjam between "+nKdJam+" and "+(nKdJam+SKS-1)+" " +
                    "and (kddosen='"+sNIDN1.trim()+"' or kddosen='"+sNIDN2.trim()+"' or kddosen='"+sNIDN3.trim()+"')";
                    
            Statement stat=conn.createStatement();
            ResultSet rs3=stat.executeQuery(sSql);
            if (rs3.next()){
                if(rs3.getInt("Ada")>0){
                    okkress=false;
                }
            }
            stat.close();
            rs3.close();
        }catch(SQLException se){}
        return okkress;
    }
    
    private boolean ok_ruang(String sKdRuang,Integer iKpst,
            String sKdMkTawar,String skodeKelas,
            String skdmktawar2,String skodeKelas2,
            String ssHari,String sJam_ke,String sSks){
        boolean okRuang_Hari_jam=true;
        int iSks=Integer.valueOf(sSks);
        int jam_ak=0;
        try{
            jam_ak=Integer.valueOf(sJam_ke.trim())+Integer.valueOf(sSks.trim())-1;
            Statement stat=conn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_READ_ONLY);
             String sSql="Select * from Jadwal J where j.sttpakai='"+sPagiSore.trim()+"' and j.kdfak='"+sKdFak.trim()+"' " +
                    "and j.ThAkad='"+sThAkad.trim()+"' and j.smt='"+sSmtAkad.trim()+"' " +
                    "and kdruang='"+sKdRuang.trim()+"' and kdhari >='"+ssHari.trim()+"' and KdJam>="+Integer.valueOf(sJam_ke)+" order by j.kdruang,j.kdhari,j.kdjam";
            ResultSet rs=stat.executeQuery(sSql);
            int kk=0;
            while (kk<iSks && okRuang_Hari_jam){
                if (rs.next()){
                    if (kk == iSks - 1) {
                        String sTT=rs.getString("kdmktawar") + rs.getString("KodeKelas");
                        if((!ssHari.trim().equalsIgnoreCase(rs.getString("kdhari"))) || (!sTT.trim().equalsIgnoreCase(skdmktawar2 + skodeKelas2) && (!rs.getString("kdmktawar").trim().equalsIgnoreCase("")))) {
                            if (!sTT.trim().equalsIgnoreCase(sKdMkTawar + skodeKelas)) {
                                okRuang_Hari_jam = false;
                            }
                        }
                    }
                }
                kk++;
            }
            if (okRuang_Hari_jam){
                rs=stat.executeQuery("select * from ruang where kdruang='"+sKdRuang.trim()+"'");
                if (rs.next()){
                    if ((iKpst-rs.getInt("kapasitas"))>=15){
                        if(JOptionPane.showConfirmDialog(this,"Kapasitas Ruang tidak Ideal \nTukar Jadwal diteruskan ??","Confirm Tukar",JOptionPane.YES_NO_OPTION)==0){
                            okRuang_Hari_jam=true;
                        }else{okRuang_Hari_jam=false;}
                    }else{
                        okRuang_Hari_jam=true;
                    }
                }else{
                    okRuang_Hari_jam=false;
                }
            }
            stat.close();
            rs.close();
        }catch(SQLException se){JOptionPane.showMessageDialog(this,se.getMessage());}
        return(okRuang_Hari_jam);
    }
    
    private Boolean ok_kelas(String sKdKelas1,String sKdKelas2,String sKdHr1,Integer iKdJam1,String 
            sKdHr2,Integer iKdJam2,Integer iSKS1,String sKdMkTawar){
        boolean okkls=false;    
        if(sKdKelas1.trim().equalsIgnoreCase("")){
            okkls= true;
        }

//        if (sKdKelas1.trim().equalsIgnoreCase(sKdKelas2.trim())) {
//            okkls= true;
//        }
        String sKdMk1=lblTukar1_Kdmktawar.getText().trim();
        String sKdMk2=lblTukar2_Kdmktawar.getText().trim();
        
        if (sKdKelas1.trim().equalsIgnoreCase(sKdKelas2.trim()) && !sKdMk1.trim().equalsIgnoreCase(sKdMk2.trim())) {
             okkls= true;
        }

        if (sKdHr1.trim().equalsIgnoreCase(sKdHr2) && (iKdJam1 == iKdJam2)){
            okkls= true;
        }
        if (!okkls){
            try{
                String sSql="";
//                if (sKdKelas1.trim().equalsIgnoreCase(sKdKelas2.trim())) {
//                    
//                }else{
//                    sSql = "select * from Jadwal J where J.KodeKelas='" + sKdKelas1 + "' and J.KodeKelas<>'" + sKdKelas2 + "' and KdFak ='" + sKdFak + "' and ThAkad ='" + sThAkad.trim() + "' " +
//                            "and smt='" + sSmtAkad.trim() + "' and J.KdMkTawar <>'" + sKdMkTawar + "' and (";
//                }
                sSql = "select * from Jadwal J where J.KodeKelas='" + sKdKelas1 + "' and KdFak ='" + sKdFak + "' and ThAkad ='" + sThAkad.trim() + "' " +
                            "and smt='" + sSmtAkad.trim() + "' and J.KdMkTawar <>'" + sKdMkTawar + "' and (";
                String sSql1 = "";
                for(int i = 0;i<iSKS1;i++){
                    if (i!=iSKS1-1){
                        sSql1 = sSql1 + "J.kdhari||cast(J.KdJam as varchar(2)) = '" + sKdHr2 + String.valueOf(iKdJam2 + i).trim() + "' or ";
                    }else{
                        sSql1 = sSql1 + "J.kdhari||cast(J.KdJam as varchar(2)) = '" + sKdHr2 + String.valueOf(iKdJam2 + i).trim() + "') and ";
                    }
                }
                String sSql2 = "";
                for(int i = 0;i<iSKS1;i++){
                    if(i != iSKS1 - 1){
                        sSql2 = sSql2 + "J.kdhari||cast(J.KdJam as varchar(2)) <> '" + sKdHr1 + String.valueOf(iKdJam1 + i).trim() + "' and ";
                    }else{
                        sSql2 = sSql2 + "J.kdhari||cast(J.KdJam as varchar(2)) <> '" + sKdHr1 + String.valueOf(iKdJam1 + i).trim() + "'";
                    }
                }
                sSql = sSql + sSql1 + sSql2 + " Order by Kdhari,KdJam";
               // System.out.println(sSql);
                Statement st=conn.createStatement();
                ResultSet rs1=st.executeQuery(sSql);
                if (rs1.next()){
                    Statement st2=conn.createStatement();
                    String sSql88="select * from jdw_show_jd('"+sThAkad.trim()+"','"+sSmtAkad.trim()+"','"+rs1.getString("kodekelas")+"','"+rs1.getString("kdmktawar")+"') " +
                            "as (kdruang varchar,kdhari varchar,hari varchar,kdjam smallint,jamawal text,jamakhir text,sksajar smallint, " +
                            "kddosen varchar,nama text,kodekelas varchar,kdmktawar varchar,namamtk varchar,jurusan varchar,namafak varchar)";
                    ResultSet rsCrashDesc=st2.executeQuery(sSql88);
                   // System.out.println(sSql88);
                    
                    if (rsCrashDesc.next()){
                        JOptionPane.showMessageDialog(this,"Mahasiswa " +
                        "Kelas \t \t : " + rsCrashDesc.getString("KodeKelas").trim().substring(0,1)+" \n" +
                        "Semester \t \t : " + rsCrashDesc.getString("KodeKelas").trim().substring(1,2)+" \n" +
                        "Jurusan \t \t : " + rsCrashDesc.getString("jurusan").trim()+" \n" +
                        "Sedang Kuliah " +
                        "Mata Kuliah \t \t : " + rsCrashDesc.getString("namamtk").trim()+" \n" +
                        "Dosen \t \t : " + rsCrashDesc.getString("nama").trim()+" \n" +
                        "Hari \t \t : " + rsCrashDesc.getString("Hari").trim()+" \n" +
                        "Jam \t \t : " + rsCrashDesc.getString("JamAwal").trim() + "-" + rsCrashDesc.getString("JamAkhir").trim()+" \n" +
                        "Ruang \t \t : " + rsCrashDesc.getString("Kdruang").trim());
                    }
                    st2.close();
                    rsCrashDesc.close();
                    okkls=false;
                }else{
                    okkls=true;
                }
                st.close();
                rs1.close();
            }catch(SQLException se){
                System.out.println(se.getMessage());
            }
        }
        return okkls;
    }
    
    private Boolean OKDosen(String[] sKdDosen1,String[] sKdDosen2,String sKdHr2,Integer iKdJam2,
            String sKdHr,Integer iKdJam,Integer iSKS,String sKdMkTawar,String sKdKelas){
        boolean okDsn=false;
        boolean bExit=false;
        if(iSKS == 0){
            okDsn = true;
        }
        String sKdd="";
        for (int ii=0;ii<sKdDosen1.length;ii++){
            sKdd=sKdd+sKdDosen1[ii];
        }
        
        if(sKdd.trim().equalsIgnoreCase("")){
            okDsn = true;
        }
        
        String sKdMk1=lblTukar1_Kdmktawar.getText().trim();
        String sKdMk2=lblTukar2_Kdmktawar.getText().trim();
        String sKelas1=lblTukar1_kelas.getText().trim()+lblTukar1_smt.getText().trim()+lblTukar1_Kdmktawar.getText().trim().substring(0,2)+sThAkad.trim()+sSmtAkad.trim();
        String sKelas2=lblTukar2_kelas.getText().trim()+lblTukar2_smt.getText().trim()+lblTukar2_Kdmktawar.getText().trim().substring(0,2)+sThAkad.trim()+sSmtAkad.trim();
        
        int ii=0;int jj;
        if (!(sKelas1.trim().equalsIgnoreCase(sKelas2.trim()) && sKdMk1.trim().equalsIgnoreCase(sKdMk2.trim()))) {
           
            while(ii<sKdDosen1.length && !okDsn){
                if (sKdDosen1[ii]!=null){
                    if (!sKdDosen1[ii].trim().equalsIgnoreCase("")){
                        jj=0;
                        while(jj<sKdDosen2.length && !okDsn){
                            if (sKdDosen2[jj]!=null){
                                if (!sKdDosen2[jj].trim().equalsIgnoreCase("")){
                                    if(sKdDosen1[ii].trim().equalsIgnoreCase(sKdDosen2[jj].trim())){
                                        okDsn=true;
                                    }
                                }
                            }
                            jj++;
                        }
                    }
                }
                ii++;
            }
        }
        ii=0;
        if (!okDsn){
            while(ii<sKdDosen1.length && !bExit){
                try{
                    if (sKdDosen1[ii]!=null){
                        if (!sKdDosen1[ii].trim().equalsIgnoreCase("")){
                            String sSql = "select * from Jadwal J inner join PlotDosen P on J.KdMktawar =P.kdMktawar and J.KodeKelas=P.kodeKelas " +
                                    "where (thakad='" + sThAkad.trim() + "' and smt ='" + sSmtAkad.trim() + "') and ";

                            String sSql3 = " P.kddosen='" + sKdDosen1[ii] + "' and (";

                            String sSql1 = "";
                            for(int j = 0;j< iSKS;j++){
                                if(j != iSKS - 1){
                                    sSql1 = sSql1 + "J.kdhari||cast(J.KdJam as varchar(2)) = '" + sKdHr2 + String.valueOf(iKdJam2 + j) + "' or ";
                                }else{
                                    sSql1 = sSql1 + "J.kdhari||cast(J.KdJam as varchar(2)) = '" + sKdHr2 + String.valueOf(iKdJam2 + j) + "') and (";
                                }
                            }

                            String sSql2 = "";
                            for(int j = 0;j< iSKS;j++){
                                if (j != iSKS - 1){
                                    sSql2 = sSql2 + " J.kdhari||cast(J.KdJam as varchar(2)) <> '" + sKdHr +String.valueOf(iKdJam + j) + "' and ";
                                }else{
                                    sSql2 = sSql2 + " J.kdhari||cast(J.KdJam as varchar(2)) <> '" + sKdHr + String.valueOf(iKdJam + j) + "')";
                                }
                            }
                            sSql = sSql + sSql3 + sSql1 + sSql2 + " Order by Kdhari,KdJam";
                        //    System.out.println(sSql);
                            Statement st=conn.createStatement();
                            ResultSet rs1=st.executeQuery(sSql);
                            if (rs1.next()){
                                Statement st2=conn.createStatement();
                                String sSql88="select * from jdw_show_jd('"+sThAkad.trim()+"','"+sSmtAkad.trim()+"','"+rs1.getString("kodekelas")+"','"+rs1.getString("kdmktawar")+"') " +
                                        "as (kdruang varchar,kdhari varchar,hari varchar,kdjam smallint,jamawal text,jamakhir text,sksajar smallint, " +
                                        "kddosen varchar,nama text,kodekelas varchar,kdmktawar varchar,namamtk varchar,jurusan varchar,namafak varchar)";
                                ResultSet rsCrashDesc=st2.executeQuery(sSql88);
                               // System.out.println(sSql88);

                                if (rsCrashDesc.next()){
                                    JOptionPane.showMessageDialog(this,"Dosen " +rsCrashDesc.getString("nama").trim()+" \n" +
                                    "Sedang Mengajar di : \n" +
                                    "Fakultas : " + rsCrashDesc.getString("namafak").trim()+" \n" +
                                    "Jurusan  : " + rsCrashDesc.getString("jurusan").trim()+" \n" +
                                    "Mata Kuliah  : " + rsCrashDesc.getString("namamtk").trim()+" \n" +        
                                    "Kelas : " + rsCrashDesc.getString("KodeKelas").trim().substring(0,1)+" " +
                                    "Semester : " + rsCrashDesc.getString("KodeKelas").trim().substring(1,2)+" " +
                                    "Hari : " + rsCrashDesc.getString("Hari").trim()+" \n" +
                                    "Jam : " + rsCrashDesc.getString("JamAwal").trim() + "-" + rsCrashDesc.getString("JamAkhir").trim()+" \n" +
                                    "Ruang : " + rsCrashDesc.getString("Kdruang").trim());
                                }
                                st2.close();
                                rsCrashDesc.close();
                                okDsn=false;
                                bExit=true;
                            }else{
                                okDsn=true;
                                bExit=true;
                            }
                            st.close();
                            rs1.close();
                        } 
                    }
                }catch(SQLException se){
                    System.out.println(se.getMessage());
                }
                ii++;
            }
        }
        return okDsn;
    }
    
    private Boolean findMTK_on_table(String sFind,String sKelas,String sRuang){
        int ii=0;int jj;
        boolean find=false;
        while (ii<table.getRowCount() && !find){
             jj=1;
             while (jj<table.getColumnCount() && !find){
                 if (table.getValueAt(ii,jj)!=null){
                     if (table.getValueAt(ii,jj).toString().substring(0,table.getValueAt(ii,jj).toString().trim().length()-3).trim().equalsIgnoreCase(sFind.trim())){
                         if (table.getValueAt(ii+2,jj).toString().trim().substring(0,1).equalsIgnoreCase(sKelas.trim())){
                             if (table.getValueAt(ii+2,0).toString().trim().equalsIgnoreCase(sRuang.trim())){
                                 find=true;
                                 table.setRowSelectionInterval(ii,ii+fixJmlRow-1);
                                 table.setColumnSelectionInterval(jj,jj);
                                 //Rectangle rect=tab.getCellRect(ii,jj,false);
                                 //table.scrollRectToVisible(rect);
                                 table.revalidate();
                                 //table.requestFocusInWindow();
                             }
                         }
                     }
                 }
                 jj++;
             }
             ii++;
        }
        return find;
    }
    
    private void updateTableJadwal(int mk1){
        String sSql="",sSql1="";
        String skdkelas;
        int jam_ke2;
        try{
            if (mk1==1){
                skdkelas=lblTukar1_kelas.getText().trim()+lblTukar1_smt.getText().trim()+lblTukar1_Kdmktawar.getText().substring(0,2).trim()+sThAkad.trim()+sSmtAkad.trim();
                jam_ke2=Integer.valueOf(lblTukar2_jam_ke.getText().trim())+Integer.valueOf(lblTukar1_sks.getText().trim())-1;
                
                sSql1="update jadwal set kdmktawar='',kodekelas='' " +
                "where thakad='"+sThAkad+"' and smt='"+sSmtAkad+"' and kdruang='"+lblTukar2_KdRuang.getText().trim()+"' " +
                "and kdhari='"+lblTukar2_hari.getText().trim()+"' and kdjam between "+lblTukar2_jam_ke.getText().trim()+" and "+lblTukar2_jam_ke1.getText().trim()+" and kdfak='"+sKdFak.trim()+"'";
                
                sSql="update jadwal set kdmktawar='"+lblTukar1_Kdmktawar.getText().trim()+"',kodekelas='"+skdkelas.trim()+"' " +
                "where thakad='"+sThAkad+"' and smt='"+sSmtAkad+"' and kdruang='"+lblTukar2_KdRuang.getText().trim()+"' " +
                "and kdhari='"+lblTukar2_hari.getText().trim()+"' and kdjam between "+lblTukar2_jam_ke.getText().trim()+" and "+String.valueOf(jam_ke2)+" and kdfak='"+sKdFak.trim()+"'";
            }else{
                if (mk1==2){
                    skdkelas=lblTukar2_kelas.getText().trim()+lblTukar2_smt.getText().trim()+lblTukar2_Kdmktawar.getText().substring(0,2).trim()+sThAkad.trim()+sSmtAkad.trim();
                    jam_ke2=Integer.valueOf(lblTukar1_jam_ke.getText().trim())+Integer.valueOf(lblTukar2_sks.getText().trim())-1;
                    
                    sSql1="update jadwal set kdmktawar='',kodekelas='' " +
                    "where thakad='"+sThAkad+"' and smt='"+sSmtAkad+"' and kdruang='"+lblTukar1_KdRuang.getText().trim()+"' " +
                    "and kdhari='"+lblTukar1_hari.getText().trim()+"' and kdjam between "+lblTukar1_jam_ke.getText().trim()+" and "+lblTukar1_jam_ke1.getText().trim()+" and kdfak='"+sKdFak.trim()+"'";
                    
                    sSql="update jadwal set kdmktawar='"+lblTukar2_Kdmktawar.getText().trim()+"',kodekelas='"+skdkelas.trim()+"' " +
                    "where thakad='"+sThAkad+"' and smt='"+sSmtAkad+"' and kdruang='"+lblTukar1_KdRuang.getText().trim()+"' " +
                    "and kdhari='"+lblTukar1_hari.getText().trim()+"' and kdjam between "+lblTukar1_jam_ke.getText().trim()+" and "+String.valueOf(jam_ke2)+" and kdfak='"+sKdFak.trim()+"'";
                }else{
                    sSql="update jadwal set kdmktawar='',kodekelas='' " +
                    "where thakad='"+sThAkad+"' and smt='"+sSmtAkad+"' and kdruang='"+lblTukar1_KdRuang.getText().trim()+"' " +
                    "and kdhari='"+lblTukar1_hari.getText().trim()+"' and kdjam between "+lblTukar1_jam_ke.getText().trim()+" and "+lblTukar1_jam_ke1.getText().trim()+" and kdfak='"+sKdFak.trim()+"'";
                }
            }
         //   System.out.println(sSql);
            Statement st=conn.createStatement();
            st.executeUpdate(sSql1);
            st.executeUpdate(sSql);
            st.close();
        }catch(SQLException se){System.out.println(se.getMessage());}
    }
    
    private void tukarJdw(){
        for (int ii=0;ii<Integer.valueOf(lblTukar1_sks.getText().trim());ii++){
            table.setValueAt(lblTukar11.getText().trim()+" "+lblTukar1_smt.getText().trim()+" 1",table.getSelectedRow(),table.getSelectedColumn()+ii);
            table.setValueAt(lblTukar1_Kdmktawar.getText().trim()+" "+lblTukar1_smt.getText().trim()+" 2",table.getSelectedRow()+1,table.getSelectedColumn()+ii);
            table.setValueAt(lblTukar1_kelas.getText().trim()+"/smt "+lblTukar1_smt.getText().trim()+"/"+lblTukar1_sks.getText().trim()+" sks "+lblTukar1_smt.getText().trim()+" 3",table.getSelectedRow()+2,table.getSelectedColumn()+ii);
            table.setValueAt(lblTukar1_dosen.getText().trim()+" "+lblTukar1_smt.getText().trim()+" 4",table.getSelectedRow()+3,table.getSelectedColumn()+ii);
        }
        CombineCellTable_perCell(Integer.valueOf(lblTukar1_sks.getText().trim()));
        updateTableJadwal(1); // kdmk ke 1
        
        // jika tukar mtk dihari yang sama 
        if (lblTukar1_hari.getText().trim().equalsIgnoreCase(lblTukar2_hari.getText().trim())){
            if (findMTK_on_table(lblTukar11.getText().trim(),lblTukar1_kelas.getText().trim(),lblTukar1_KdRuang.getText().trim())){
                SplitCellTablePerCell();
                if (!mk2kosong){
                    for (int ii=0;ii<Integer.valueOf(lblTukar2_sks.getText().trim());ii++){
                        table.setValueAt(lblTukar21.getText().trim()+" "+lblTukar2_smt.getText().trim()+" 1",table.getSelectedRow(),table.getSelectedColumn()+ii);
                        table.setValueAt(lblTukar2_Kdmktawar.getText().trim()+" "+lblTukar2_smt.getText().trim()+" 2",table.getSelectedRow()+1,table.getSelectedColumn()+ii);
                        table.setValueAt(lblTukar2_kelas.getText().trim()+"/smt "+lblTukar2_smt.getText().trim()+"/"+lblTukar1_sks.getText().trim()+" sks "+lblTukar2_smt.getText().trim()+" 3",table.getSelectedRow()+2,table.getSelectedColumn()+ii);
                        table.setValueAt(lblTukar2_dosen.getText().trim()+" "+lblTukar2_smt.getText().trim()+" 4",table.getSelectedRow()+3,table.getSelectedColumn()+ii);
                    }
                    CombineCellTable_perCell(Integer.valueOf(lblTukar2_sks.getText().trim()));
                    updateTableJadwal(2); //kdmk ke 2
                }
                else{
                    for (int ii=0;ii<Integer.valueOf(lblTukar2_sks.getText().trim());ii++){
                        table.setValueAt(null,table.getSelectedRow(),table.getSelectedColumn()+ii);
                        table.setValueAt(null,table.getSelectedRow()+1,table.getSelectedColumn()+ii);
                        table.setValueAt(null,table.getSelectedRow()+2,table.getSelectedColumn()+ii);
                        table.setValueAt(null,table.getSelectedRow()+3,table.getSelectedColumn()+ii);
                    }
                    updateTableJadwal(3); // kdmk 2 koseong
                }
            }else {JOptionPane.showMessageDialog(this,"tukar gagal");}
        }
        
    }
    
    private void tukarJdw1(){

        updateTableJadwal(1); // update kdmk ke 1
        if (!mk2kosong){
            updateTableJadwal(2); // update kdmk ke 2
        }else{
            updateTableJadwal(3); // update kdmk ke 2 kosong 
        }
        String sKdmkTmp=lblTukar11.getText().trim();
        sHari=lblTukar2_hari.getText().trim();
        lblHeader.setText("EDIT JADWAL ".concat(hari[Integer.valueOf(sHari)-1]));
        SplitCellTable();
        loadJadwalHari();
        JOptionPane.showMessageDialog(this,"Tukar Jadwal Sukses");
        clearTeksMkTukar2();
        setButton();
        if (find_Data_on_table(sKdmkTmp)){            
        }
    }
    
     private void setButton(){
        if (btnTukar.getText().equalsIgnoreCase("tukar")){
            tukar=true;
            JOptionPane.showMessageDialog(this,"Silahkan Pilih Matakuliah ke 2 yang akan ditukarkan...");
            btnTukar.setText("Cancel");
            btnDoTukar.setEnabled(true);
            btnTambah.setEnabled(false);
        }else{
            tukar=false;
            clearTeksMkTukar2();
            clearTeksMkTukar1();
            btnTukar.setText("Tukar");
            btnDoTukar.setEnabled(false);
            btnTambah.setEnabled(true);
        }
   } 
     
      private void clearTeksMkTukar2(){
        lblTukar21.setText("");
        lblTukar2_Kdmktawar.setText("");
        lblTukar2_kelas.setText("");
        lblTukar2_smt.setText("");
        lblTukar2_sks.setText("");
        lblTukar2_dosen.setText("");
        lblTukar2_hari.setText("");
        lblTukar2_jam_ke.setText("");
        lblTukar2_jam_ke1.setText("");
        lblTukar2_KdRuang.setText("");
    }
      
     private void clearTeksMkTukar1(){
        lblTukar11.setText("");
        lblTukar1_Kdmktawar.setText("");
        lblTukar1_kelas.setText("");
        lblTukar1_smt.setText("");
        lblTukar1_sks.setText("");
        lblTukar1_dosen.setText("");
    }  
      
    private void TableMouseReleased(java.awt.event.MouseEvent evt) {                                         
        //ShowPstMtk();
        int kdjam=0;
        if (table.getValueAt(table.getSelectedRow(),table.getSelectedColumn())!=null){
            if (table.getValueAt(table.getSelectedRow(),table.getSelectedColumn()).toString().substring(table.getValueAt(table.getSelectedRow(),table.getSelectedColumn()).toString().trim().length()-1,table.getValueAt(table.getSelectedRow(),table.getSelectedColumn()).toString().trim().length()).equalsIgnoreCase("1")){
                int iSks=Integer.valueOf(table.getValueAt(table.getSelectedRow()+2,table.getSelectedColumn()).toString().substring(table.getValueAt(table.getSelectedRow()+2,table.getSelectedColumn()).toString().length()-9,table.getValueAt(table.getSelectedRow()+2,table.getSelectedColumn()).toString().length()-8));
                String sSelected=table.getValueAt(table.getSelectedRow(),table.getSelectedColumn()).toString();
                String jamawal=table.getColumnName(table.getSelectedColumn()).trim().substring(0,5);

                try{
                    Statement stat=conn.createStatement();
                    ResultSet rs=stat.executeQuery("select kdjam from jam where jamawal='"+jamawal+"'");
                    if (rs.next()){
                        kdjam=rs.getInt("kdjam");
                    }
                    rs.close();
                    stat.close();
                }catch(SQLException se){

                }
                mk2kosong=false;
                if (!tukar){
                    if (sSelected.substring(sSelected.trim().length()-1,sSelected.trim().length()).equalsIgnoreCase("1")){
                        lblTukar11.setText(sSelected.substring(0,sSelected.trim().length()-3));
                        sSelected=table.getValueAt(table.getSelectedRow()+1,table.getSelectedColumn()).toString();
                        lblTukar1_Kdmktawar.setText(sSelected.substring(0,sSelected.trim().length()-3));
                        sSelected=table.getValueAt(table.getSelectedRow()+2,table.getSelectedColumn()).toString();
                        lblTukar1_jam_ke.setText(String.valueOf(kdjam));
                        lblTukar1_jam_ke1.setText(String.valueOf(kdjam+iSks-1));
                        lblTukar1_kelas.setText(sSelected.substring(0,1));
                        lblTukar1_smt.setText(sSelected.substring(6,7));
                        lblTukar1_sks.setText(sSelected.substring(8,10));
                        sSelected=table.getValueAt(table.getSelectedRow()+3,table.getSelectedColumn()).toString();
                        lblTukar1_dosen.setText(sSelected.substring(0,sSelected.trim().length()-3));
                        lblTukar1_hari.setText(sHari);
                        sSelected=table.getValueAt(table.getSelectedRow(),0).toString();
                        lblTukar1_KdRuang.setText(sSelected.trim());
                    }
                }else{
                    if (sSelected.substring(sSelected.trim().length()-1,sSelected.trim().length()).equalsIgnoreCase("1")){
                        lblTukar21.setText(sSelected.substring(0,sSelected.trim().length()-3));
                        sSelected=table.getValueAt(table.getSelectedRow()+1,table.getSelectedColumn()).toString();
                        lblTukar2_Kdmktawar.setText(sSelected.substring(0,sSelected.trim().length()-3));
                        sSelected=table.getValueAt(table.getSelectedRow()+2,table.getSelectedColumn()).toString();
                        lblTukar2_jam_ke.setText(String.valueOf(kdjam));
                        lblTukar2_jam_ke1.setText(String.valueOf(kdjam+iSks-1));
                        lblTukar2_kelas.setText(sSelected.substring(0,1));
                        lblTukar2_smt.setText(sSelected.substring(6,7));
                        lblTukar2_sks.setText(sSelected.substring(8,10));
                        sSelected=table.getValueAt(table.getSelectedRow()+3,table.getSelectedColumn()).toString();
                        lblTukar2_dosen.setText(sSelected.substring(0,sSelected.trim().length()-3));
                        lblTukar2_hari.setText(sHari);
                        sSelected=table.getValueAt(table.getSelectedRow(),0).toString();
                        lblTukar2_KdRuang.setText(sSelected.trim());
                    }
                }
            }
        }else {
            if (tukar){
                mk2kosong=true;
                String jamawal=table.getColumnName(table.getSelectedColumn()).trim().substring(0,5);
                try{
                    Statement stat=conn.createStatement();
                    ResultSet rs=stat.executeQuery("select kdjam from jam where jamawal='"+jamawal+"'");
                    if (rs.next()){
                        kdjam=rs.getInt("kdjam");
                    }
                    rs.close();
                    stat.close();
                }catch(SQLException se){}
                lblTukar21.setText(lblTukar11.getText().trim());
                lblTukar2_Kdmktawar.setText(lblTukar1_Kdmktawar.getText().trim());
                lblTukar2_jam_ke.setText(String.valueOf(kdjam));
                lblTukar2_jam_ke1.setText(String.valueOf(kdjam+Integer.valueOf(lblTukar1_sks.getText().trim())-1));
                lblTukar2_kelas.setText(lblTukar1_kelas.getText().trim());
                lblTukar2_smt.setText(lblTukar1_smt.getText().trim());
                lblTukar2_sks.setText(lblTukar1_sks.getText());
                lblTukar2_dosen.setText(lblTukar1_dosen.getText());
                lblTukar2_hari.setText(sHari);
                lblTukar2_KdRuang.setText(table.getValueAt(table.getSelectedRow(),0).toString().trim());
            }
        
        }
    } 
    
    private void tableLook(){
        int jmlRow=0;
        try{
            byte jmin=0,jmax=0;
            
            String sQry="select min(jadwal.kdjam) as jmin,max(jadwal.kdjam) as jmax from jadwal where thakad='"+sThAkad+"' " +
                    "and smt='"+sSmtAkad+"' and jadwal.kdfak='"+sKdFak+"' and coalesce(kdmktawar,'')<>'' and sttpakai='"+sPagiSore.trim()+"'"; 

            java.sql.Statement st = conn.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE,ResultSet.CONCUR_READ_ONLY);
            ResultSet rs = st.executeQuery(sQry);
            if (rs.next()) {
                 jmin=rs.getByte("jmin");  
                 jmax=rs.getByte("jmax");  
            }
            
            sQry="select jamawal,jamakhir from jam " +
                    "where (kdjam>="+jmin+" and kdjam<="+jmax+") order by kdjam";
            
            
           rs = st.executeQuery(sQry);
           int ncol=1;
           while (rs.next()) {
                 ncol++;
           }
            colum= new Object[ncol];
            ncol=1;
            colum[0]="";
            rs.beforeFirst();
            while (rs.next()) {
                 colum[ncol]="  "+rs.getString("jamawal")+" - "+rs.getString("jamakhir")+"  ";
                 ncol++;
            }
           
            sQry="select count(distinct(kdruang)) as jmlruang from jadwal where thakad='"+sThAkad+"' and smt='"+sSmtAkad+"' and kdfak='"+sKdFak+"'";
            rs = st.executeQuery(sQry);
            if (rs.next()){
                jmlRow=rs.getInt("jmlruang");
            }
            
            int rowke=0;
            ruangan= new Object[jmlRow];
            sQry="select distinct(kdruang) as ruang from jadwal where thakad='"+sThAkad+"' and smt='"+sSmtAkad+"' and kdfak='"+sKdFak+"'";
            rs = st.executeQuery(sQry);
            while (rs.next()){
                ruangan[rowke]=rs.getString("ruang");
                rowke++;
            }
            
            
            rs.close();
            st.close();
            /**/            //-----------------------------set fixed row
            ListModel lm = new AbstractListModel() {
                @Override
              public int getSize() { return ruangan.length; }
                @Override
              public Object getElementAt(int row) {
                return ruangan[row];
              }
            };
            //----------------------------- set hari mulai senin=1
                sHari="1";

            //------------------------------buat tabel atribut
                

                ml=new AttributiveCellTableModel(colum,jmlRow*fixJmlRow);

                cellAtt =(CellSpan)ml.getCellAttribute();
                table = new MultiSpanCellTable( ml );
                table.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
                //table.setDefaultRenderer(Object.class ,new AttributiveCellRenderer());
    //            table.setCellSelectionEnabled(true);
    //            table.setSelectionMode(ListSelectionModel.SINGLE_INTERVAL_SELECTION);   
                setHeaderTable();
                // ----------lanjutan set fixed row
                scroll = new JScrollPane( table );

                JList rowHeader = new JList(lm);    
                rowHeader.setFixedCellWidth(80);

                rowHeader.setFixedCellHeight((table.getRowHeight()
                                           + table.getRowMargin())*fixJmlRow);
                                        // + table.getIntercellSpacing().height);
                rowHeader.setCellRenderer(new RowHeaderRenderer(table));
                table.addMouseListener(new java.awt.event.MouseAdapter() {
                    @Override
                    public void mouseReleased(java.awt.event.MouseEvent evt) {
                        TableMouseReleased(evt);
                    }
                });
                scroll.setRowHeaderView(rowHeader);

                getContentPane().add(scroll, new org.netbeans.lib.awtextra.AbsoluteConstraints(8, 81, 879, 425));
        }catch(SQLException se){System.out.println(se.getMessage());}
        
        //----------------fill data to table
        
        try{
                int ii=0;
                String sQry="select distinct(kdruang)as kdruang from jadwal where thakad='"+sThAkad+"' and smt='"+sSmtAkad+"' and kdfak='"+sKdFak+"' order by kdruang";
                Statement st=conn.createStatement();
                ResultSet rs = st.executeQuery(sQry);
                while (rs.next()) {
                     table.setValueAt(rs.getString("kdruang"),ii,0);  
                     table.setValueAt(rs.getString("kdruang"),ii+1,0);
                     table.setValueAt(rs.getString("kdruang"),ii+2,0);
                     table.setValueAt(rs.getString("kdruang"),ii+3,0);
                     ii=ii+fixJmlRow;
                }
                rs.close();
                st.close();
        }catch(SQLException se){System.out.println(se.getMessage());}
        //table.setSize(500,75);
        TableCellRenderer rendr= new MyRowRenderer();
        table.getColumnModel().getColumn(0).setMaxWidth(0);
        table.getColumnModel().getColumn(0).setMinWidth(0);
        table.getColumnModel().getColumn(0).setPreferredWidth(0);
//////        for (int ii=1;ii<table.getColumnCount();ii++){
//////            //table.getColumnModel().getColumn(ii).setResizable(true);
//////            table.getColumnModel().getColumn(ii).setCellRenderer(rendr);
//////            table.getColumnModel().getColumn(ii).setPreferredWidth(120);
//////            table.getColumnModel().getColumn(ii).setCellEditor(new EditorAbsen(false));
//////           // System.out.println(tblEditJdw.getColumnName(ii));
//////        }
        table.setAutoscrolls(true);
        //-------------------------------
        loadJadwalHari();
    }
    
    private void loadJadwalHari(){
        try {
            Statement stat=conn.createStatement();
            String sSql="select kdruang,kdhari,jdw.kdjam,jam.jamawal,jam.jamakhir,jdw.kdmktawar,jdw.kodekelas,mtk.namamtk,twr.sksajar,gabung(dsn.nama) as dosen," +
                    "case when coalesce(gelardepan,'')='' then '' else coalesce(gelardepan,'')||'.' end as gelardep," +
                    "case when coalesce(gelarbelakang,'')='' then '' else ', '||coalesce(gelarbelakang,'') end as gelarbel " +
                    "from jadwal jdw " +
                    "inner join mtktawar twr on twr.kdmktawar=jdw.kdmktawar " +
                    "inner join plotdosen plt on plt.kdmktawar=jdw.kdmktawar and plt.kodekelas=jdw.kodekelas " +
                    "inner join dosennidn dsn on dsn.kddosen=plt.kddosen and dsn.flag=1 " +
                    "inner join matakuliah mtk on mtk.kdfak='"+sKdFak+"' and mtk.kdmtk=substring(jdw.kdmktawar,3,6) " +
                    "inner join jam on jam.kdjam=jdw.kdjam " +
                    "where thakad='"+sThAkad+"' and smt='"+sSmtAkad+"' and jdw.kdfak='"+sKdFak+"' and kdhari='"+sHari+"' " +
                    "and coalesce(jdw.kdmktawar,'')<>'' and sttpakai='"+sPagiSore.trim()+"' " +
                    "group by kdruang,kdhari,jdw.kdjam,jam.jamawal,jam.jamakhir,jdw.kdmktawar,jdw.kodekelas,mtk.namamtk,twr.sksajar,gelardepan,gelarbelakang " +
                    "order by kdruang,kdhari,jdw.kdjam,jdw.kdmktawar,jdw.kodekelas";
            //System.out.println(sSql);
            ResultSet rs=stat.executeQuery(sSql);
            int jj;
            while (rs.next()){
                jj=0;
                while (jj<table.getRowCount()){
                    for (int ii=1;ii<table.getColumnCount();ii++){
                        if ((rs.getString("jamawal").equalsIgnoreCase(table.getColumnName(ii).trim().substring(0,5)))&&(rs.getString("kdruang").equalsIgnoreCase(table.getValueAt(jj,0).toString()))){
                           // tblEditJdw.setValueAt(rs.getString("kdmktawar")+" "+rs.getString("namamtk"),jj,ii);
                            table.setValueAt(rs.getString("namamtk").trim()+" "+rs.getString("kodekelas").substring(1,2)+" 1",jj,ii);
                            table.setValueAt(rs.getString("kdmktawar")+" "+rs.getString("kodekelas").substring(1,2)+" 2",jj+1,ii);
                            table.setValueAt(rs.getString("kodekelas").substring(0,1)+"/smt "+rs.getString("kodekelas").substring(1,2)+"/"+rs.getString("sksajar")+" sks "+rs.getString("kodekelas").substring(1,2)+" 3",jj+2,ii);
                            table.setValueAt(rs.getString("gelardep")+" "+rs.getString("dosen")+""+rs.getString("gelarbel")+" "+rs.getString("kodekelas").substring(1,2)+" 4",jj+3,ii);
                        }
                    }    
                    jj=jj+fixJmlRow;
                }
            }
            stat.close();
            rs.close();
        } catch (SQLException ex) {
            System.out.println(ex.getMessage());
        }
        
        CombineCellTable((ColoredCell)cellAtt);
    } 

        private void setHeaderTable(){
        table.setRowHeight(25);
        GroupableTableHeader header=new GroupableTableHeader(table.getColumnModel());
        ColumnGroup hari_h = new ColumnGroup("JAM KE");        
        for (int ii=1;ii<table.getColumnCount();ii++){
            hari_h.add(table.getColumnModel().getColumn(ii));
        }
        header.addGroup(hari_h);
        header.setBackground(new Color(51,0,245));
        header.setForeground(new Color(255,255,0));
        table.setTableHeader(header);
        table.getTableHeader().setSize(150,25);
    }
    
private void CombineCellTable(ColoredCell cellColor){
        String tStr="";
        int jj=1;
        int iP=0;
        int ii=0;
        while (ii<table.getRowCount()){
//            table.setRowSelectionInterval(ii,ii+3);
//            table.setColumnSelectionInterval(0,0);
//            int[] columns = table.getSelectedColumns();
//            int[] rows    = table.getSelectedRows();
//          //  cellAtt.combine(rows,columns);
            jj=1;
            while (jj<table.getColumnCount()){
                if (table.getValueAt(ii,jj)==null){
                    iP=1;
                }else{
                    //iP=Integer.valueOf(table.getValueAt(ii,jj).toString().substring(0,1));
                    iP=Integer.valueOf(table.getValueAt(ii+2,jj).toString().substring(table.getValueAt(ii+2,jj).toString().length()-9,table.getValueAt(ii+2,jj).toString().length()-8));
                }
                if (iP>1){
                    table.setRowSelectionInterval(ii,ii);
                    table.setColumnSelectionInterval(jj,jj+(iP-1));
                    int[] columns = table.getSelectedColumns();
                    int[] rows    = table.getSelectedRows();
                    cellAtt.combine(rows,columns);
                    //cellColor.setBackground(new Color(248,255,167), rows, columns);
                    //-------------------------
                    table.setRowSelectionInterval(ii+1,ii+1);
                    table.setColumnSelectionInterval(jj,jj+(iP-1));
                    columns = table.getSelectedColumns();
                    rows    = table.getSelectedRows();
                    cellAtt.combine(rows,columns);
                    
                    //-------------------------        
                    table.setRowSelectionInterval(ii+2,ii+2);
                    table.setColumnSelectionInterval(jj,jj+(iP-1));
                    columns = table.getSelectedColumns();
                    rows    = table.getSelectedRows();
                    cellAtt.combine(rows,columns);
                    
                    //-------------------------   
                    table.setRowSelectionInterval(ii+3,ii+3);
                    table.setColumnSelectionInterval(jj,jj+(iP-1));
                    columns = table.getSelectedColumns();
                    rows    = table.getSelectedRows();
                    cellAtt.combine(rows,columns);
                    
                    //------------------------- 
                    
                    table.clearSelection();
                    table.revalidate();
                    table.repaint();
                }
                jj=jj+iP;
            }
            ii=ii+fixJmlRow;
        }    
    }    

private void CombineCellTable_perCell(Integer jmlSks){
        String tStr="";
        int row=table.getSelectedRow();
        int column=table.getSelectedColumn();
        int ii=0;
        while (ii<fixJmlRow){
                    table.setRowSelectionInterval(row+ii,row+ii);
                    table.setColumnSelectionInterval(column,column+(jmlSks-1));
                    int[] columns = table.getSelectedColumns();
                    int[] rows    = table.getSelectedRows();
                    cellAtt.combine(rows,columns);
            ii++;
        }   
        table.clearSelection();
        table.revalidate();
        table.repaint();
}    

  private void SplitCellTable(){
        String tStr="";
        for (int ii=0;ii<table.getRowCount();ii++){
            for (int jj=1;jj<table.getColumnCount();jj++){
                    table.setRowSelectionInterval(ii,ii);
                    table.setColumnSelectionInterval(jj,jj);
                    int column = table.getSelectedColumn();
                    int row    = table.getSelectedRow();
                    cellAtt.split(row,column);
                    table.setValueAt(null,row,column);
                    table.clearSelection();
                    table.revalidate();
                    table.repaint();
            }
        }    
    }
  
  
  
    private void SplitCellTablePerCell(){
        int iSks=0;
        int row =table.getSelectedRow();
        int column =table.getSelectedColumn();
        if (table.getValueAt(row,column)!=null){
            iSks=Integer.valueOf(table.getValueAt(row+2,column).toString().substring(table.getValueAt(row+2,column).toString().length()-9,table.getValueAt(row+2,column).toString().length()-8));
        }
        for (int ii=0;ii<fixJmlRow;ii++){
            table.setRowSelectionInterval(row+ii,row+ii);
            table.setColumnSelectionInterval(column,column);
            cellAtt.split(row+ii,column);
            for (int jj=0; jj<iSks;jj++){
                table.setValueAt(null,row+ii,column+jj);
            }
           // table.clearSelection();
            table.revalidate();
            table.repaint();
        }
        table.setRowSelectionInterval(row,row);
        table.setColumnSelectionInterval(column,column);
    }
    
        class MyRowRenderer extends DefaultTableCellRenderer implements TableCellRenderer{
        @Override
        public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
            //Component comp = getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);
            
            /*
            Font fnt;
            if((column==1)||(column==3)||(column==4)){
                fnt = new Font("Dialog",Font.BOLD,14);
            }else{
                fnt = new Font("Dialog",Font.PLAIN,14);
            }
            setFont(fnt);
            setSize(getWidth(),100);
            */
            
                
            Color g1 = new Color(210,223,235);//236,250,246);//230,243,255);//[251,251,235]
            Color g2 = new Color(200,228,245);//216,251,241);//219,238,255);//[247,247,218]
            Color g3 = new Color(190,218,235);
            Color g4 = new Color(190,200,205);
            
            Color w1 = new Color(255,255,255);
            Color w2 = new Color(250,250,250);
            
            Color h1 = new Color(236,250,246);//(255,240,240);
            Color h2 = new Color(216,251,241);//(250,230,230);
            Color h3 = new Color(206,241,231);
            Color h4 = new Color(186,221,211);
            
            Color g;
            Color w;
            Color h;
            
            if(column%2==0){
                g = g1;
                w = w1;
                h = h1;
            }else{
                g = g2;
                w = w2;
                h = h2;
            }
            int ttt=0;
            if (value==null || column==0){
                ttt=0;
            }else{
                ttt=Integer.valueOf(value.toString().trim().substring(value.toString().trim().length()-3,value.toString().trim().length()-2));
            }
            switch (ttt){
                case 1:{
                    setBackground(h1);
                    break;
                }
                case 2:{
                    setBackground(g1);
                    break;
                }
                case 3:{
                    setBackground(h2);
                    break;
                }
                case 4:{
                    setBackground(g2);
                    break;
                }
                case 5:{
                    setBackground(h3);
                    break;
                }
                case 6:{
                    setBackground(g3);
                    break;
                }
                case 7:{
                    setBackground(h4);
                    break;
                }
                case 8:{
                    setBackground(g4);
                    break;
                }
                default :
                    setBackground(new Color(200,225,167));
                    break;
            }
            //if (row%2==0){
//            if (value!=null){
//                if (value.toString().trim().substring(value.toString().trim().length()-1,value.toString().trim().length()).equalsIgnoreCase("+")){
//                    setBackground(h);
//                }
//            }else{
//                setBackground(g2);
//            }
            if (column==0) {
                setBackground(g1);
            }
            if(isSelected){
                if (value!=null && column!=0){
                    if (value.toString().substring(value.toString().trim().length()-1,value.toString().trim().length()).equalsIgnoreCase("1")){
                        table.setColumnSelectionInterval(table.getSelectedColumn(),table.getSelectedColumn());
                        table.setRowSelectionInterval(table.getSelectedRow(),table.getSelectedRow()+3);
                    }
//                    else
//                    if (value.toString().substring(value.toString().trim().length()-1,value.toString().trim().length()).equalsIgnoreCase("2")){
//                        table.setColumnSelectionInterval(table.getSelectedColumn(),table.getSelectedColumn());
//                        table.setRowSelectionInterval(table.getSelectedRow()-1,table.getSelectedRow()+1);
//                    }else
//                    if (value.toString().substring(value.toString().trim().length()-1,value.toString().trim().length()).equalsIgnoreCase("3")){
//                        table.setColumnSelectionInterval(table.getSelectedColumn(),table.getSelectedColumn());
//                        table.setRowSelectionInterval(table.getSelectedRow()-2,table.getSelectedRow());
//                    }
                    //setBackground(new Color(248,255,167));//[174,212,254]
                }
                setBackground(new Color(248,255,167));//[174,212,254]
            }
            setHorizontalAlignment(CENTER);
            if (value==null ||column==0){
                setValue(value);            
            }else{
                setValue(value.toString().trim().substring(0,value.toString().trim().length()-3));            
            }
            return this;
        }
        
    }
    
 class RowHeaderRenderer extends JLabel implements ListCellRenderer {
  
  RowHeaderRenderer(JTable table) {
    JTableHeader header = table.getTableHeader();
    setOpaque(true);
    setBorder(UIManager.getBorder("TableHeader.cellBorder"));
    setHorizontalAlignment(CENTER);
    setForeground(header.getForeground());
    setBackground(header.getBackground());
    setFont(header.getFont());
  }
  
        @Override
  public Component getListCellRendererComponent( JList list, 
         Object value, int index, boolean isSelected, boolean cellHasFocus) {
    setText((value == null) ? "" : value.toString());
    return this;
  }
}
    
    private void btnKeluarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnKeluarActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnKeluarActionPerformed

    private void btnTukarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTukarActionPerformed
        if (lblTukar11!=null && !lblTukar11.getText().trim().equalsIgnoreCase("")){
            setButton();
        }else{
            JOptionPane.showMessageDialog(this,"Pilih Terlebih Dahulu Matakuliah yang akan ditukarkan !!");
        }
    }//GEN-LAST:event_btnTukarActionPerformed

    private void insert2DosenAjar(String sKdmkTawar1,String sKodeKelas1,String sKdmkTawar2,String sKodeKelas2){
        try{
            int iCount=0;
            Statement st1=conn.createStatement();
            ResultSet rs3=st1.executeQuery("select kddosen from plotdosen where kdmktawar='"+sKdmkTawar1.trim()+"' and kodekelas='"+sKodeKelas1.trim()+"'");
            while (rs3.next()){
                sKdDosen1[iCount]=rs3.getString("kddosen");
                iCount++;        
            }
            iCount=0;
            rs3=st1.executeQuery("select kddosen from plotdosen where kdmktawar='"+sKdmkTawar2.trim()+"' and kodekelas='"+sKodeKelas2.trim()+"'");
            while (rs3.next()){
                sKdDosen2[iCount]=rs3.getString("kddosen");
                iCount++;        
            }
            st1.close();
            rs3.close();
        }catch(SQLException se){
            System.out.println(se.getMessage());
        }
    }
    
    private void btnDoTukarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDoTukarActionPerformed
        boolean bSuccess1 = false;
        boolean bSuccess2 = false;
        boolean tdkusah_cek2=true;
        
        String sKdMk1=lblTukar1_Kdmktawar.getText().trim();
        String sKdMk2=lblTukar2_Kdmktawar.getText().trim();
        
        String sKdKelas1=lblTukar1_kelas.getText().trim()+lblTukar1_smt.getText().trim()+lblTukar1_Kdmktawar.getText().trim().substring(0,2)+sThAkad.trim()+sSmtAkad.trim();
        String sKdKelas2=lblTukar2_kelas.getText().trim()+lblTukar2_smt.getText().trim()+lblTukar2_Kdmktawar.getText().trim().substring(0,2)+sThAkad.trim()+sSmtAkad.trim();
        
        bSuccess1 = false;
        if (sKdKelas1.trim().equalsIgnoreCase(sKdKelas2.trim()) && sKdMk1.trim().equalsIgnoreCase(sKdMk2.trim())) {
            tdkusah_cek2= false;
            bSuccess2=true;
        }
        
        insert2DosenAjar(lblTukar1_Kdmktawar.getText().trim(),sKdKelas1.trim(),lblTukar2_Kdmktawar.getText().trim(),sKdKelas2.trim());
        
        if (ok_ruang(lblTukar2_KdRuang.getText().trim(),60,lblTukar1_Kdmktawar.getText().trim(),
                sKdKelas1,lblTukar2_Kdmktawar.getText().trim(),sKdKelas2.trim(),lblTukar2_hari.getText().trim(),lblTukar2_jam_ke.getText().trim(), lblTukar1_sks.getText().trim())){
            String s1,s2;
            s1=(lblTukar1_hari.getText().trim() +lblTukar1_jam_ke.getText().trim());
            s2=(lblTukar2_hari.getText().trim() + lblTukar2_jam_ke.getText().trim());        
            if (( s1.trim().equalsIgnoreCase(s2.trim())) && lblTukar1_sks.getText().trim().equalsIgnoreCase(lblTukar2_sks.getText().trim())){
                bSuccess1 = true;
            }else{
                if (ok_kelas(sKdKelas1.trim(),sKdKelas2.trim(), lblTukar1_hari.getText().trim(),Integer.valueOf(lblTukar1_jam_ke.getText().trim()),
                        lblTukar2_hari.getText().trim(), Integer.valueOf(lblTukar2_jam_ke.getText().trim()), Integer.valueOf(lblTukar1_sks.getText().trim()),lblTukar1_Kdmktawar.getText().trim())){
                    if (OKDosen(sKdDosen1, sKdDosen2, lblTukar2_hari.getText().trim(), Integer.valueOf(lblTukar2_jam_ke.getText().trim()), lblTukar1_hari.getText().trim(),Integer.valueOf(lblTukar1_jam_ke.getText().trim()), Integer.valueOf(lblTukar1_sks.getText().trim()), lblTukar1_Kdmktawar.getText().trim(), sKdKelas1.trim())) {
                        bSuccess1 = true;
                    }
                }
            }
        }
        if (!bSuccess2) bSuccess2 = false;
        if (bSuccess1 && tdkusah_cek2){
            if (ok_ruang(lblTukar1_KdRuang.getText().trim(),60,lblTukar2_Kdmktawar.getText().trim(),
                    sKdKelas2,lblTukar1_Kdmktawar.getText().trim(),sKdKelas1.trim(),lblTukar1_hari.getText().trim(),lblTukar1_jam_ke.getText().trim(), lblTukar2_sks.getText().trim())){
                String s1=(lblTukar2_hari.getText().trim() +lblTukar2_jam_ke.getText().trim());
                String s2=(lblTukar1_hari.getText().trim() + lblTukar1_jam_ke.getText().trim());
                if ((s1.trim().equalsIgnoreCase(s2.trim())) && lblTukar2_sks.getText().trim().equalsIgnoreCase(lblTukar1_sks.getText().trim())) {
                    bSuccess2 = true;
                }else{
                    if (ok_kelas(sKdKelas2.trim(),sKdKelas1.trim(), lblTukar2_hari.getText().trim(),Integer.valueOf(lblTukar2_jam_ke.getText().trim()),
                            lblTukar1_hari.getText().trim(), Integer.valueOf(lblTukar1_jam_ke.getText().trim()), Integer.valueOf(lblTukar2_sks.getText().trim()),lblTukar2_Kdmktawar.getText().trim())){
                        if (OKDosen(sKdDosen2, sKdDosen1, lblTukar1_hari.getText().trim(), Integer.valueOf(lblTukar1_jam_ke.getText().trim()), lblTukar2_hari.getText().trim(),Integer.valueOf(lblTukar2_jam_ke.getText().trim()), Integer.valueOf(lblTukar2_sks.getText().trim()), lblTukar2_Kdmktawar.getText().trim(), sKdKelas2.trim())) {
                            bSuccess2 = true;
                        }
                    }
                }
            }
        }
        if (bSuccess1 && bSuccess2){
                SplitCellTablePerCell();
                tukarJdw1();
                
        }else{
            JOptionPane.showMessageDialog(this,"Tukar Jadwal Gagal..!");
        }
    }//GEN-LAST:event_btnDoTukarActionPerformed

    private void btnMingguActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMingguActionPerformed
        lblHeader.setText("EDIT JADWAL MINGGU");
        sHari="7";
        SplitCellTable();
        loadJadwalHari();
    }//GEN-LAST:event_btnMingguActionPerformed

    private void btnSabtuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSabtuActionPerformed
        lblHeader.setText("EDIT JADWAL SABTU");
        sHari="6";
        SplitCellTable();
        loadJadwalHari();
    }//GEN-LAST:event_btnSabtuActionPerformed

    private void BtnJumatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnJumatActionPerformed
        lblHeader.setText("EDIT JADWAL JUM'AT");
        sHari="5";
        SplitCellTable();
        loadJadwalHari();
    }//GEN-LAST:event_BtnJumatActionPerformed

    private void btnKamisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnKamisActionPerformed
        lblHeader.setText("EDIT JADWAL KAMIS");
        sHari="4";
        SplitCellTable();
        loadJadwalHari();
    }//GEN-LAST:event_btnKamisActionPerformed

    private void btnRabuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRabuActionPerformed
        lblHeader.setText("EDIT JADWAL RABU");
        sHari="3";
        SplitCellTable();
        loadJadwalHari();
    }//GEN-LAST:event_btnRabuActionPerformed

    private void btnSelasaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSelasaActionPerformed
        lblHeader.setText("EDIT JADWAL SELASA");
        sHari="2";
        SplitCellTable();
        loadJadwalHari();
    }//GEN-LAST:event_btnSelasaActionPerformed

    private void btnSeninActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSeninActionPerformed
        lblHeader.setText("EDIT JADWAL SENIN");
        sHari="1";
        SplitCellTable();
        loadJadwalHari();
    }//GEN-LAST:event_btnSeninActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        if(JOptionPane.showConfirmDialog(this,"Yakin Akan menghapus matakuliah "+lblTukar11.getText(),"Confirm Hapus",JOptionPane.YES_NO_OPTION)==0){
            String sKdKelas1=lblTukar1_kelas.getText().trim()+lblTukar1_smt.getText().trim()+lblTukar1_Kdmktawar.getText().trim().substring(0,2)+sThAkad.trim()+sSmtAkad.trim();
     //       System.out.println("select * from jadwal where kdmktawar='"+lblTukar1_Kdmktawar.getText().trim()+"' and kodekelas='"+sKdKelas1.trim()+"'");
            try{
                conn.setAutoCommit(false);
                Statement statm=conn.createStatement();
                statm.executeUpdate("update jadwal set kdmktawar='',kodekelas='',kapasitas=0,kapasitasterisi=0 where kdmktawar='"+lblTukar1_Kdmktawar.getText().trim()+"' and kodekelas='"+sKdKelas1.trim()+"' and thakad='"+sThAkad.trim()+"' and smt='"+sSmtAkad.trim()+"'");
                statm.close();
                conn.commit();
                conn.setAutoCommit(true);
                SplitCellTablePerCell();
            }catch(SQLException se){System.out.println(se.getMessage());
                    try{
                        conn.rollback();
                        conn.setAutoCommit(true);
                    }catch(SQLException ser){System.out.println(ser.getMessage());}
            }
            JOptionPane.showMessageDialog(this, "matakuliah "+lblTukar11.getText()+" Sudah Terhapus");
        }
}//GEN-LAST:event_btnDeleteActionPerformed

    
    private Boolean find_Data_on_table(String sFind){
        int ii=0;int jj;
        boolean find=false;
        while (ii<table.getRowCount() && !find){
             jj=1;
             while (jj<table.getColumnCount() && !find){
                 if (table.getValueAt(ii,jj)!=null){
                     if (table.getValueAt(ii,jj).toString().substring(0,table.getValueAt(ii,jj).toString().trim().length()-3).trim().toLowerCase().contains(sFind.trim().toLowerCase())){
                         find=true;
                         //table.setRowSelectionInterval(ii,ii+fixJmlRow-1);
                         table.setRowSelectionInterval(ii,ii);
                         table.setColumnSelectionInterval(jj,jj);
                         //Rectangle rect=tab.getCellRect(ii,jj,false);
                         //table.scrollRectToVisible(rect);
                         table.revalidate();
                         //table.requestFocusInWindow();
                         fill_text1_by_table_selection();
                     }
                 }
                 jj++;
             }
             ii++;
        }
        return find;
    }
    
    private void fill_text1_by_table_selection(){
        String jamawal=table.getColumnName(table.getSelectedColumn()).trim().substring(0,5);
        int kdjam=0;
        try{
            Statement stat=conn.createStatement();
            ResultSet rs=stat.executeQuery("select kdjam from jam where jamawal='"+jamawal+"'");
            if (rs.next()){
                kdjam=rs.getInt("kdjam");
            }
            rs.close();
            stat.close();
        }catch(SQLException se){

        }
        int iSks=Integer.valueOf(table.getValueAt(table.getSelectedRow()+2,table.getSelectedColumn()).toString().substring(table.getValueAt(table.getSelectedRow()+2,table.getSelectedColumn()).toString().length()-9,table.getValueAt(table.getSelectedRow()+2,table.getSelectedColumn()).toString().length()-8));
        String sSelected=table.getValueAt(table.getSelectedRow(),table.getSelectedColumn()).toString();
        lblTukar11.setText(sSelected.substring(0,sSelected.trim().length()-3));
        sSelected=table.getValueAt(table.getSelectedRow()+1,table.getSelectedColumn()).toString();
        lblTukar1_Kdmktawar.setText(sSelected.substring(0,sSelected.trim().length()-3));
        sSelected=table.getValueAt(table.getSelectedRow()+2,table.getSelectedColumn()).toString();
        lblTukar1_jam_ke.setText(String.valueOf(kdjam));
        lblTukar1_jam_ke1.setText(String.valueOf(kdjam+iSks-1));
        lblTukar1_kelas.setText(sSelected.substring(0,1));
        lblTukar1_smt.setText(sSelected.substring(6,7));
        lblTukar1_sks.setText(sSelected.substring(8,10));
        sSelected=table.getValueAt(table.getSelectedRow()+3,table.getSelectedColumn()).toString();
        lblTukar1_dosen.setText(sSelected.substring(0,sSelected.trim().length()-3));
        lblTukar1_hari.setText(sHari);
        sSelected=table.getValueAt(table.getSelectedRow(),0).toString();
        lblTukar1_KdRuang.setText(sSelected.trim());
    }
    
    private void txtCariMtkKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCariMtkKeyReleased
        if (evt.getKeyCode()==KeyEvent.VK_ENTER){
            if (!find_Data_on_table(txtCariMtk.getText().trim())){
                JOptionPane.showMessageDialog(this, "Data yang anda cari tidak ditemukan...!");
            }
        }
    }//GEN-LAST:event_txtCariMtkKeyReleased
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new edit_and_show_Jadwal().setVisible(true);
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtnJumat;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnDoTukar;
    private javax.swing.JButton btnKamis;
    private javax.swing.JButton btnKeluar;
    private javax.swing.JButton btnMinggu;
    private javax.swing.JButton btnRabu;
    private javax.swing.JButton btnSabtu;
    private javax.swing.JButton btnSelasa;
    private javax.swing.JButton btnSenin;
    private javax.swing.JButton btnTambah;
    private javax.swing.JButton btnTukar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JLabel lblHeader;
    private javax.swing.JLabel lblTukar11;
    private javax.swing.JLabel lblTukar1_KdRuang;
    private javax.swing.JLabel lblTukar1_Kdmktawar;
    private javax.swing.JLabel lblTukar1_dosen;
    private javax.swing.JLabel lblTukar1_hari;
    private javax.swing.JLabel lblTukar1_jam_ke;
    private javax.swing.JLabel lblTukar1_jam_ke1;
    private javax.swing.JLabel lblTukar1_kelas;
    private javax.swing.JLabel lblTukar1_sks;
    private javax.swing.JLabel lblTukar1_smt;
    private javax.swing.JLabel lblTukar21;
    private javax.swing.JLabel lblTukar2_KdRuang;
    private javax.swing.JLabel lblTukar2_Kdmktawar;
    private javax.swing.JLabel lblTukar2_dosen;
    private javax.swing.JLabel lblTukar2_hari;
    private javax.swing.JLabel lblTukar2_jam_ke;
    private javax.swing.JLabel lblTukar2_jam_ke1;
    private javax.swing.JLabel lblTukar2_kelas;
    private javax.swing.JLabel lblTukar2_sks;
    private javax.swing.JLabel lblTukar2_smt;
    private javax.swing.JTextField txtCariMtk;
    // End of variables declaration//GEN-END:variables
    
}
